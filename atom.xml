<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aaron&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://aoaoao.me/"/>
  <updated>2018-12-18T03:57:11.535Z</updated>
  <id>https://aoaoao.me/</id>
  
  <author>
    <name>Aaron Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用树莓派模拟Game Boy打印机及相机外设</title>
    <link href="https://aoaoao.me/2018/12/17/game-boy-printer/"/>
    <id>https://aoaoao.me/2018/12/17/game-boy-printer/</id>
    <published>2018-12-17T12:44:10.000Z</published>
    <updated>2018-12-18T03:57:11.535Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Game Boy最初是任天堂在1989年推出的8位掌机，其后又推出了GBP、GPL、GPC、GPA等衍生机型，以1.2亿台的总销量成为世界上最畅销的掌机系列。很多第三方厂商也抓住机会，针对Game Boy生产了各种神仙级别的外设（具体可参考AVGN<a href="https://www.youtube.com/watch?v=EEzJH90h3aA" target="_blank" rel="noopener">第147集</a>）。个人最感兴趣的是其中相机和打印机两款外设。要知道，在那个手机都不普及的90年代，一台能随时拍照还能随时打印的游戏机是多么黑科技般的存在！</p><h2 id="Pocket-Printer-与-Pocket-Camera"><a href="#Pocket-Printer-与-Pocket-Camera" class="headerlink" title="Pocket Printer 与 Pocket Camera"></a>Pocket Printer 与 Pocket Camera</h2><p>大概一个月前，博主有幸搞到了两台日版相机外设（Pocket Camera）和全新的打印机外设（Pocket Printer）。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2018/12/17/5c179e6fc237d.jpg" alt="IMG_20181205_135414-COLLAGE.jpg" title="">                </div>                <div class="image-caption">IMG_20181205_135414-COLLAGE.jpg</div>            </figure><p>由于初代Game Boy屏幕分辨率为160X144且只有四阶灰度，所以这相机的成像质量仅仅是能看的水平。不过20年前60刀的价格真的不能再期待什么啦。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2018/12/17/5c179f22120e9.jpg" alt="Snipaste_2018-12-17_21-05-08.jpg" title="">                </div>                <div class="image-caption">Snipaste_2018-12-17_21-05-08.jpg</div>            </figure><p>相机卡带自带RAM，可存储几十张照片。将Game Boy主机与Pocket Printer通过通信线连接后就可以打印照片了。这台打印机就是普通的热敏打印机，随机附带的热敏纸已经过期了，打印出来惨不忍睹，而且我找遍了淘宝也没找到尺寸相符的热敏纸。这倒也不是什么大问题，将咕咕机的热敏纸手动裁成3.7cm左右的宽度就能塞进去了。注意这个宽度不能多也不能太少，否则根本吐不出来，甚至卡死在里面。一切就绪后，下图是我用相机拍摄电脑屏幕后打印出来的效果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2018/12/17/5c17a121ea870.jpg" alt="Snipaste_2018-12-17_21-10-51.jpg" title="">                </div>                <div class="image-caption">Snipaste_2018-12-17_21-10-51.jpg</div>            </figure><p>除了相机之外，这台打印机还支持不少游戏。比如你可以将《精灵宝可梦 金/银》中的图鉴打印出来。</p><p>基本功能都测试过后，下面是搞事情环节了。打印机与主机之间使用Game Boy的通信线缆交换数据，那是不是可以用诸如树莓派的硬件模拟这个通信的过程，实现捕获图像数据（要知道初代GB实机截图是很麻烦的）或者自由打印图像？</p><h2 id="模拟打印机接受图像"><a href="#模拟打印机接受图像" class="headerlink" title="模拟打印机接受图像"></a>模拟打印机接受图像</h2><p>开干之前，首先要解决的是解析打印机与主机间的通信方式。</p><h3 id="Game-Boy-通信"><a href="#Game-Boy-通信" class="headerlink" title="Game Boy 通信"></a>Game Boy 通信</h3><p>前面提到过打印机通过通信线缆连接到主机，好在这种线缆还没成古董，淘宝上仍能以较低价格买到。从线缆插头可以看出其共有6个Pin</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2018/12/17/5c17a8f80b004.jpg" alt="通信线缆插头" title="">                </div>                <div class="image-caption">通信线缆插头</div>            </figure><p>按照下图的方式依次编号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> ___________</span><br><span class="line">|  6  4  2  |</span><br><span class="line"> \_5__3__1_/</span><br></pre></td></tr></table></figure><p>各个引脚的功能可归纳为：</p><table><thead><tr><th>Pin编号</th><th>功能</th><th>线缆颜色</th></tr></thead><tbody><tr><td>1</td><td>VCC</td><td>Orange</td></tr><tr><td>2</td><td>SOUT</td><td>Purple</td></tr><tr><td>3</td><td>SIN</td><td>Green</td></tr><tr><td>4</td><td>SD</td><td>Yellow</td></tr><tr><td>5</td><td>SCK</td><td>White</td></tr><tr><td>6</td><td>GND</td><td>Red</td></tr></tbody></table><p>（注意这里的线缆颜色是我手动测出的，不同厂家生产的规格不同，推荐自己用万用表测一遍以便备用）</p><p>Pocket Printer并没有使用到Game Boy的所有通信特性，所以本次模拟不需要使用全部的引脚，只需要2/3/5/6号就行了。</p><p>Game Boy通信的双方分为主从机两方，本次实验中GB为主机，打印机为从机。主机通过<code>SOUT</code>端口向从机发送数据，并通过<code>SIN</code>端口接受从机的响应。除此之外，主机还需要向<code>SCK</code>端口输出时钟信号，主从机通信时会共用这一个信号。</p><p>通信数据以字节为单位从高位到低位传输。可以想象主从设备上各有一个八位移位寄存器，每接受到一位就将其从低位移入。<code>SIN</code>和<code>SOUT</code>可同时发送和接受（但在本次模拟的情况下不会出现这种情况）。比如，主机要通过<code>SCK</code>向从机发送<code>0x33</code>，这个过程<code>SCK</code>和<code>SOUT</code>的波形图可以大致表示为如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2018/12/17/5c17ae37cdce3.jpg" alt="GB通信波形" title="">                </div>                <div class="image-caption">GB通信波形</div>            </figure><p><code>SCK</code>每次的下降和上升代表着一个时钟周期，从机在这个周期内读取<code>SOUT</code>的值，以此进行下去就可以得到完整的字节。这也为我们的模拟提供了大致思路：以<code>SCK</code>作为外部中断的信号，每次中断时都读取一次<code>SOUT</code>的电平。</p><h3 id="Pocket-Printer通信协议"><a href="#Pocket-Printer通信协议" class="headerlink" title="Pocket Printer通信协议"></a>Pocket Printer通信协议</h3><p>打印机与主机的通信以不定长的数据包为单位，并且大部分时间都是主机向打印机发送数据，打印机只会在每个数据包的最后两个字节的时钟内向主机发送ACK及自身状态码。</p><p>一个典型数据包的结构如下：</p><table><thead><tr><th>Byte 位置</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6+X</th><th>6+X+1</th><th>6+X+2</th><th>6+X+3</th><th>6+X+4</th></tr></thead><tbody><tr><td>大小</td><td>2 bytes</td><td>2 bytes</td><td>1 byte</td><td>1 byte</td><td>1 byte</td><td>1 byte</td><td>变长</td><td>2 bytes</td><td>2 bytes</td><td>1 byte</td><td>1 byte</td></tr><tr><td>描述</td><td>标识字节1</td><td>标识字节2</td><td>命令</td><td>压缩</td><td>数据长度(X)</td><td>数据长度(X)</td><td>正文</td><td>校验码</td><td>校验码</td><td>ACK</td><td>状态</td></tr><tr><td>GB发送</td><td>0x88</td><td>0x33</td><td>命令标志</td><td>压缩标志</td><td>Low Byte</td><td>High Byte</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>打印机发送</td><td>0x00</td><td>0x00</td><td>0x00</td><td>0x00</td><td>0x00</td><td>0x00</td><td>0x00</td><td>0x00</td><td>0x00</td><td>0x81</td><td>状态标志</td></tr></tbody></table><p>每个数据包的第一和第二个字节为固定的<code>Magic Byte</code>用于标识数据包的开始；</p><p>第三个字节为命令标识符，具体可以分为：Initialize (<code>0x01</code>), Data (<code>0x04</code>), Print (<code>0x02</code>), Inquiry (<code>0x0F</code>) 四种。它们的具体含义为：</p><ul><li><p>Initialize (<code>0x01</code>) 初始化指令</p><p>每次打印任务开始时发送的以一个指令，一般数据长度为0。</p></li><li><p>Data (<code>0x04</code>) 数据传输指令 </p><p>传输打印页面数据的指令。一般情况下，每次打印的页面大小与GB主机分辨率相同，而打印数据会通过包含此指令的数据包传输，每个数据包的正文大小为640字节，共9个包。所有数据传输完毕后，GB主机还会发送一个正文长度为0的空打印指令，但其用途未知。</p></li><li><p>Print (<code>0x02</code>) 打印指令</p><p>所有打印数据传输完毕后，发送此指令开始打印。正文长度一般为4字节，第一个字节固定为<code>0x01</code>，用途未知；第二个字节定义了不同打印页面间距；第三个字节定义了打印使用的色板；第四个字节为打印色彩浓度。</p></li><li><p>Inquiry  (<code>0x0F</code>)  查询指令</p><p>此指令的预期发送时间段不固定，Game Boy主机可能会在任何时间段发送此指令查询打印机状态。可以确定的是，在打印开始后，Game Boy主机会发送一连串查询指令查询是否打印完成。</p></li></ul><p>第四个字节标志着数据正文是否被压缩，可取值为<code>0x00</code>（未压缩）和<code>0x01</code>（压缩），压缩算法为简单的游长压缩；</p><p>第四和第五个字节组合可表示16位的正文长度；</p><p>第六位字节开始为数据正文，其长度就是上两位指出的数据长度</p><p>第6+X+2和6+X+2位为16位的校验码，用于验证数据传输是否出错。其值为从命令字节开始所有字节的总和，每个字节视为8位无符号整形；</p><p>第6+X+3个字节为ACK共识。严格来说，校验码发送完毕后，一个数据包的发送就结束了，因为后面两个自己的内容是由打印机发给Game Boy的。发送ACK为模拟打印机的关键，如果Game Boy没能在第6+X+3个字节的周期内及时收到ACK，就会视为超时并在屏幕上显示“错误#2”。</p><p>第6+X+4个字节是由打印机发送给Game Boy的，用于标识自身状态，一般发送<code>0x00</code>即可。</p><h3 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h3><p>前面提到过，每次打印的图像数据会装载9个640字节的数据包中传输，合计是5760个字节。拿到数据后要做的就是把它复原为图像。好在Game Boy发送的数据格式和其显存中的基本一致。Game Boy使用8x8的像素阵呈现图像，每个像素占用2位，可表示四阶灰度。在打印传输的数据包中，每次传输的640字节数据可以表示一大行图像，即160x14像素；这一大行又可分为两个小行，每行由20个8x8的像素阵组成。每个字节连通其后一个字节可表示像素阵中的一行像素（8个）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">像素阵:                                     图像:</span><br><span class="line"></span><br><span class="line">.33333..                     .33333.. -&gt; 01111100 -&gt; $7C</span><br><span class="line">22...22.                                 01111100 -&gt; $7C</span><br><span class="line">11...11.                     22...22. -&gt; 00000000 -&gt; $00</span><br><span class="line">2222222. &lt;-- 数字表示                     11000110 -&gt; $C6</span><br><span class="line">33...33.     灰度值           11...11. -&gt; 11000110 -&gt; $C6</span><br><span class="line">22...22.                                 00000000 -&gt; $00</span><br><span class="line">11...11.                     2222222. -&gt; 00000000 -&gt; $00</span><br><span class="line">........                                 11111110 -&gt; $FE</span><br><span class="line">                             33...33. -&gt; 11000110 -&gt; $C6</span><br><span class="line">                                         11000110 -&gt; $C6</span><br><span class="line">                             22...22. -&gt; 00000000 -&gt; $00</span><br><span class="line">                                         11000110 -&gt; $C6</span><br><span class="line">                             11...11. -&gt; 11000110 -&gt; $C6</span><br><span class="line">                                         00000000 -&gt; $00</span><br><span class="line">                             ........ -&gt; 00000000 -&gt; $00</span><br><span class="line">                                         00000000 -&gt; $00</span><br></pre></td></tr></table></figure><p>得到每个像素的灰度值后，一个可行操作是使用<code>░</code> <code>▒</code> <code>▓</code>这种字符在命令行中将图像展示出来。</p><h3 id="硬件连线"><a href="#硬件连线" class="headerlink" title="硬件连线"></a>硬件连线</h3><p>理解了通信协议后，就可以开始模拟了。我使用的方案是将Game Boy通信线缆剪短后，把其中各个Pin的导线焊接到公母口杜邦线上，这样就能很容易的连接到树莓派的GPIO引脚上了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2018/12/18/5c18632262dd3.jpg" alt="Snipaste_2018-12-18_11-01-41.jpg" title="">                </div>                <div class="image-caption">Snipaste_2018-12-18_11-01-41.jpg</div>            </figure><p>Pocket Printer的通信不需要使用全部引脚，只需要连接<code>SIN</code> <code>SOUT</code> <code>SCK</code> <code>GND</code> 四个就够了。我的连接方式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">+------------+               +----------------------+</span><br><span class="line">|            |               |                      |</span><br><span class="line">|       SIN +------------------&gt;GPIO.2 (BOARD #13)  |</span><br><span class="line">|            |               |                      |</span><br><span class="line">|       SOUT+------------------&gt;GPIO.7 (BOARD #7)   |</span><br><span class="line">|            |               |                      |</span><br><span class="line">|       SCK +------------------&gt;GPIO.0 (BOARD #11)  |</span><br><span class="line">|            |               |                      |</span><br><span class="line">|       GND +------------------&gt;GND    (BOARD #9)   |</span><br><span class="line">|            |               |                      |</span><br><span class="line">+------------+               +----------------------+</span><br><span class="line">  Link Cable                        Rspberry Pi</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>我使用了C++下的<code>wiringPi</code>库来实现模拟，因为Python的执行速度可能无法达到<code>SCK</code>频率的要求而导致误码率增加。</p><p>代码及详细注释如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wiringPi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCK 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SOUT 7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIN 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//存放收到的Byte</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> b = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//前八位为ACK，后八位表示一切OK的状态，每次数据包结束时发送</span></span><br><span class="line"><span class="keyword">int</span> ack[<span class="number">16</span>] = &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//数据表序号</span></span><br><span class="line"><span class="keyword">int</span> packIndex=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//GameBoy packet基本信息</span></span><br><span class="line"><span class="keyword">int</span> dataLength = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> byteIndex = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> bitIndex = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> checksum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> waitForMagicByte = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">int</span> command;</span><br><span class="line"><span class="keyword">int</span> firstPrint=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> dataIndex = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Game Boy显示的行、块及坐标</span></span><br><span class="line"><span class="keyword">int</span> row,block,x,y=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//模拟Game Boy显存</span></span><br><span class="line"><span class="built_in">string</span>  VRAM[<span class="number">160</span>][<span class="number">320</span>];</span><br><span class="line"><span class="comment">//四阶灰度的代替字符</span></span><br><span class="line"><span class="built_in">string</span>  stringList[<span class="number">4</span>] = &#123;<span class="string">" "</span>,<span class="string">"░"</span>,<span class="string">"▒"</span>,<span class="string">"▓"</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将像素表示写入模拟显存</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toVRAM</span><span class="params">(<span class="keyword">int</span> sign)</span></span>&#123;</span><br><span class="line">VRAM[row*<span class="number">8</span>+y][block*<span class="number">16</span>+x] = stringList[sign];</span><br><span class="line">VRAM[row*<span class="number">8</span>+y][block*<span class="number">16</span>+x+<span class="number">1</span>] = stringList[sign];</span><br><span class="line">x+=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;=<span class="number">16</span>)&#123;</span><br><span class="line">x=<span class="number">0</span>;</span><br><span class="line">y++;</span><br><span class="line"><span class="keyword">if</span>(y&gt;=<span class="number">8</span>)&#123;</span><br><span class="line">y=<span class="number">0</span>;</span><br><span class="line">block++;</span><br><span class="line"><span class="keyword">if</span>(block&gt;=<span class="number">20</span>)&#123;</span><br><span class="line">block=<span class="number">0</span>;</span><br><span class="line">row++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将模拟显存转化为字符图像输出到终端</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">outputImage</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> mark1,mark2;</span><br><span class="line"><span class="keyword">int</span> subList[<span class="number">8</span>]=&#123;<span class="number">128</span>,<span class="number">64</span>,<span class="number">32</span>,<span class="number">16</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">640</span>; j +=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">8</span>;k++)&#123;</span><br><span class="line">mark1=data[i][j]&amp;subList[k];</span><br><span class="line">mark2=data[i][j+<span class="number">1</span>]&amp;subList[k];</span><br><span class="line"><span class="keyword">if</span>(mark1==<span class="number">0</span>&amp;&amp;mark2==<span class="number">0</span>)&#123;</span><br><span class="line">toVRAM(<span class="number">0</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(mark1==subList[k]&amp;&amp;mark2==<span class="number">0</span>)&#123;</span><br><span class="line">toVRAM(<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(mark1==<span class="number">0</span>&amp;&amp;mark2==subList[k])&#123;</span><br><span class="line">toVRAM(<span class="number">2</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">toVRAM(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理每个字节</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">handleByte</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> b)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//高字节长度位</span></span><br><span class="line"><span class="keyword">if</span>(byteIndex==<span class="number">5</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(b&gt;<span class="number">0</span>)&#123;</span><br><span class="line">dataLength+=b*<span class="number">256</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//低字节长度位</span></span><br><span class="line"><span class="keyword">if</span>(byteIndex==<span class="number">4</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(b&gt;<span class="number">0</span>)&#123;</span><br><span class="line">dataLength+=b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(byteIndex==<span class="number">7</span>+dataLength)&#123;</span><br><span class="line"><span class="keyword">if</span>(command==<span class="number">2</span>&amp;&amp;b!=<span class="number">15</span>)&#123;</span><br><span class="line">ack[<span class="number">16</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//命令位</span></span><br><span class="line"><span class="keyword">if</span>(byteIndex==<span class="number">2</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Initialize "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">command=<span class="number">4</span>;</span><br><span class="line">dataIndex++;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Data "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="comment">//如果发送可打印指令，就把图像输出在命令行中</span></span><br><span class="line"><span class="comment">//某些情况下Game Boy初始化前会发送一个打印指令，这里手动忽略掉</span></span><br><span class="line"><span class="keyword">if</span>(firstPrint!=<span class="number">1</span>)&#123;</span><br><span class="line">outputImage();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">160</span>; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">320</span>; j ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;VRAM[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">firstPrint=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Print "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">15</span>:</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Inquiry "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Unknown "</span>&lt;&lt;(<span class="keyword">int</span>)b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//记录数据正文</span></span><br><span class="line"><span class="keyword">if</span>(byteIndex&gt;=<span class="number">6</span>&amp;&amp;byteIndex&lt;=<span class="number">6</span>+dataLength&amp;&amp;command==<span class="number">4</span>)&#123;</span><br><span class="line">data[dataIndex][byteIndex<span class="number">-6</span>] = b;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//终端处理函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myInterrupt</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">b = b &lt;&lt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (digitalRead(<span class="number">7</span>))&#123;</span><br><span class="line">b = b | <span class="number">1</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(waitForMagicByte)&#123;</span><br><span class="line"><span class="comment">//判断是否读到Magic Byte</span></span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">int</span>)b==<span class="number">51</span>)&#123;</span><br><span class="line">byteIndex = <span class="number">2</span>;</span><br><span class="line">bitIndex = <span class="number">16</span>;</span><br><span class="line">dataLength=<span class="number">0</span>;</span><br><span class="line">ack[<span class="number">16</span>]=<span class="number">0</span>;</span><br><span class="line">command=<span class="number">0</span>;</span><br><span class="line">waitForMagicByte=<span class="literal">false</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"found magic byte"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送ACK及自身状态</span></span><br><span class="line"><span class="keyword">if</span> (bitIndex &gt;= <span class="number">63</span>+dataLength*<span class="number">8</span> &amp;&amp; bitIndex &lt; <span class="number">72</span>+dataLength*<span class="number">8</span>)&#123;</span><br><span class="line">digitalWrite(<span class="number">2</span>, ack[(bitIndex - (<span class="number">63</span>+dataLength*<span class="number">8</span>))]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//是否产生了新的Byte</span></span><br><span class="line"><span class="keyword">if</span>((bitIndex+<span class="number">1</span>)%<span class="number">8</span>==<span class="number">0</span>)&#123;</span><br><span class="line">handleByte(b);</span><br><span class="line">byteIndex++;</span><br><span class="line">&#125;</span><br><span class="line">bitIndex++;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清空计数器，准备下一个新包</span></span><br><span class="line"><span class="keyword">if</span>(byteIndex&gt;=<span class="number">10</span>+dataLength)&#123;</span><br><span class="line">byteIndex = <span class="number">0</span>;</span><br><span class="line">bitIndex = <span class="number">0</span>;</span><br><span class="line">dataLength=<span class="number">0</span>;</span><br><span class="line">waitForMagicByte=<span class="literal">true</span>;</span><br><span class="line">checksum = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Packet:"</span>&lt;&lt;++packIndex&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (wiringPiSetup() &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Unable to setup wiringPi: %s\n"</span>, strerror(errno));</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pinMode(<span class="number">7</span>, INPUT);</span><br><span class="line">pinMode(<span class="number">0</span>, INPUT);</span><br><span class="line">digitalWrite(<span class="number">2</span>, HIGH);</span><br><span class="line">digitalWrite(<span class="number">7</span>, HIGH);</span><br><span class="line"></span><br><span class="line">pullUpDnControl (BUTTON_PIN, PUD_DOWN);</span><br><span class="line"><span class="keyword">if</span> (wiringPiISR(BUTTON_PIN, INT_EDGE_RISING, &amp;myInterrupt) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Unable to setup ISR: %s\n"</span>, strerror(errno));</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;flush;</span><br><span class="line">delay(<span class="number">20000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2018/12/18/5c186c7a3e060.png" alt="最终效果" title="">                </div>                <div class="image-caption">最终效果</div>            </figure><p>为了更好的效果，我调小了终端字体大小和颜色。</p><h3 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h3><p>这次的模拟不能算是完美，还有很多的问题，其中最严重的就是误码率。不知道是因为树莓派本身的问题、还是线缆焊接的问题，数据传输的误码率出其的高，甚至有时没法完整传输两个Magic Bytes。所以程序里判断数据包开始时只用了第二个Magic Byte。及时成功传输了一个包，要保证全部9个数据包都被识别到还是要拼运气的，平均下来打印五六次才能成功展示出一次图像。而且，展示出的图像中还是有不少的像素是有问题的。这个问题困扰了我好久，目前还没找到具体原因和解决办法，欢迎各位大佬在评论区赐教。</p><h2 id="模拟Game-Boy发送打印数据"><a href="#模拟Game-Boy发送打印数据" class="headerlink" title="模拟Game Boy发送打印数据"></a>模拟Game Boy发送打印数据</h2><p>有了上面的经验，就可以做的更深入一点了。之前是模拟打印机 接受图像，现在反过来，模拟Game Boy向打印机发送图像和指令，把Pocket Printer变成通用打印机。</p><h3 id="硬件连线-1"><a href="#硬件连线-1" class="headerlink" title="硬件连线"></a>硬件连线</h3><p>连线部分和上面的基本一致，只是SIN和SOUT调换了一下，插头查到了打印机上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">+------------+               +----------------------+</span><br><span class="line">|            |               |                      |</span><br><span class="line">|       SOUT+------------------&gt;GPIO.2 (BOARD #13)  |</span><br><span class="line">|            |               |                      |</span><br><span class="line">|       SIN +------------------&gt;GPIO.7 (BOARD #7)   |</span><br><span class="line">|            |               |                      |</span><br><span class="line">|       SCK +------------------&gt;GPIO.0 (BOARD #11)  |</span><br><span class="line">|            |               |                      |</span><br><span class="line">|       GND +------------------&gt;GND    (BOARD #9)   |</span><br><span class="line">|            |               |                      |</span><br><span class="line">+------------+               +----------------------+</span><br><span class="line">  Link Cable                        Rspberry Pi</span><br></pre></td></tr></table></figure><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><p>代码部分比之前模拟打印机的要简单，大部分情况下只需要发送数据即可。使用下面的代码，需要先将要打印的图像数据存在<code>pic.bin</code>中。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wiringPi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GBInitialize  0x01</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GBData 0x04</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GBPrint 0x02</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GBInquiry 0x0f</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DELAY_MS 40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GBClock  0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GBIn  7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GBOut  2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowByte(w) ((uint8_t) ((w) &amp; 0xff))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> highByte(w) ((uint8_t) ((w) &gt;&gt; 8))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//发送一个字节</span></span><br><span class="line"><span class="keyword">uint8_t</span>  GBSendByte(<span class="keyword">unsigned</span> <span class="keyword">char</span> b)&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> reply=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">uint8_t</span> bit_pos = <span class="number">0</span>; bit_pos &lt; <span class="number">8</span>; ++bit_pos) &#123;</span><br><span class="line">reply &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">digitalWrite(GBClock, <span class="number">0</span>); <span class="comment">// Send clock signal</span></span><br><span class="line"><span class="keyword">if</span> ((b &lt;&lt; bit_pos) &amp; <span class="number">0x80</span>) &#123;</span><br><span class="line">digitalWrite(GBOut, <span class="number">1</span>); <span class="comment">// Write out to printer</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123; </span><br><span class="line">digitalWrite(GBOut, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">delayMicroseconds (DELAY_MS);</span><br><span class="line">digitalWrite(GBClock, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (digitalRead(GBIn))&#123;</span><br><span class="line">  reply |= <span class="number">1</span>;    <span class="comment">// Fetch printer reply</span></span><br><span class="line">&#125;</span><br><span class="line">delayMicroseconds (DELAY_MS);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> reply;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送一个包</span></span><br><span class="line"><span class="keyword">uint16_t</span> GBSendPacket(<span class="keyword">uint8_t</span> command, <span class="keyword">uint16_t</span> size,<span class="keyword">uint8_t</span> data[],<span class="keyword">int</span> start=<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">uint16_t</span> status, checksum = <span class="number">0x0000</span>;</span><br><span class="line"><span class="comment">// Send magic bytes</span></span><br><span class="line">GBSendByte(<span class="number">0x88</span>);</span><br><span class="line">GBSendByte(<span class="number">0x33</span>);</span><br><span class="line"><span class="comment">// Send command</span></span><br><span class="line">GBSendByte(command);</span><br><span class="line">checksum += command;</span><br><span class="line"><span class="comment">// Send compression</span></span><br><span class="line">GBSendByte(<span class="number">0x00</span>);</span><br><span class="line"><span class="comment">// Send size</span></span><br><span class="line">GBSendByte(lowByte(size));</span><br><span class="line">GBSendByte(highByte(size));</span><br><span class="line">checksum += lowByte(size);</span><br><span class="line">checksum += highByte(size);</span><br><span class="line"><span class="comment">// Send data</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uint8_t</span> b;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">uint16_t</span> i = <span class="number">0</span>; i &lt; size; ++i) &#123;</span><br><span class="line">b = data[i+start];</span><br><span class="line">checksum += b;</span><br><span class="line">GBSendByte(b);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Send checksum</span></span><br><span class="line">GBSendByte(lowByte(checksum));</span><br><span class="line">GBSendByte(highByte(checksum));</span><br><span class="line"><span class="comment">// Read status</span></span><br><span class="line">status = GBSendByte(<span class="number">0x00</span>);</span><br><span class="line">status = status &lt;&lt; <span class="number">8</span>;</span><br><span class="line">status |= GBSendByte(<span class="number">0x00</span>);</span><br><span class="line"><span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//从文件读取要发送的数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">readPicData</span><span class="params">(<span class="keyword">uint8_t</span>* data)</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> rawData[<span class="number">5760</span>];</span><br><span class="line"><span class="built_in">std</span>::<span class="function">ifstream <span class="title">infile</span><span class="params">(<span class="string">"pic.bin"</span>)</span></span>;</span><br><span class="line">    infile.seekg(<span class="number">0</span>, infile.end);</span><br><span class="line">    <span class="keyword">size_t</span> length = infile.tellg();</span><br><span class="line">    infile.seekg(<span class="number">0</span>, infile.beg);</span><br><span class="line">infile.read(rawData, length);</span><br><span class="line"><span class="built_in">memcpy</span>( data, rawData, length);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (wiringPiSetup() &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Unable to setup wiringPi: %s\n"</span>, strerror(errno));</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pinMode(GBIn, INPUT);</span><br><span class="line">pinMode(GBClock, OUTPUT);</span><br><span class="line">pinMode(GBOut, OUTPUT);</span><br><span class="line">pullUpDnControl(GBIn,PUD_UP);      <span class="comment">// turn on pullup resistors</span></span><br><span class="line">pullUpDnControl(GBOut,PUD_UP);      <span class="comment">// turn on pullup resistors</span></span><br><span class="line"><span class="keyword">uint8_t</span> data[<span class="number">8</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;(<span class="keyword">int</span>)GBSendPacket(GBInitialize,<span class="number">0</span>,data)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">uint8_t</span> printData[<span class="number">8</span>]=&#123;<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0xE4</span>,<span class="number">0x40</span>&#125;;</span><br><span class="line"><span class="keyword">uint8_t</span> Data[<span class="number">5760</span>];</span><br><span class="line">readPicData(Data);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;(<span class="keyword">int</span>)GBSendPacket(GBData,<span class="number">640</span>,Data,i*<span class="number">640</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;(<span class="keyword">int</span>)GBSendPacket(GBData,<span class="number">0</span>,printData)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;(<span class="keyword">int</span>)GBSendPacket(GBPrint,<span class="number">4</span>,printData)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><p>打印个Hello World：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2018/12/18/5c186f6954168.jpg" alt="打印结果" title="">                </div>                <div class="image-caption">打印结果</div>            </figure><p>如果解决供电问题的话，把这个打印机联网，就是个简陋版的咕咕机了！</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="http://www.hardwarebook.info/Game_Boy_Link" target="_blank" rel="noopener">Game Boy Link</a> </li><li><a href="https://www.mikrocontroller.net/attachment/34801/gb-printer.txt" target="_blank" rel="noopener">gb-printer.txt</a></li><li><a href="http://www.huderlem.com/demos/gameboy2bpp.html" target="_blank" rel="noopener">Gameboy 2BPP Graphics Format</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Game Boy最初是任天堂在1989年推出的8位掌机，其后又推出了GBP、GPL、GPC、GPA等衍生机型，以1.2亿台的总销量成为世界上
      
    
    </summary>
    
    
      <category term="树莓派" scheme="https://aoaoao.me/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
      <category term="GameBoy" scheme="https://aoaoao.me/tags/GameBoy/"/>
    
  </entry>
  
  <entry>
    <title>给Cloudreve添加化学式/矩阵/大事件验证码</title>
    <link href="https://aoaoao.me/2018/08/30/captcha-for-cloudreve/"/>
    <id>https://aoaoao.me/2018/08/30/captcha-for-cloudreve/</id>
    <published>2018-08-30T12:16:16.000Z</published>
    <updated>2018-08-30T12:47:15.936Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这个验证码最早是给树洞外链开发的，目的只是为了娱乐，并没有想到真的防机器人。后来被我迁移到了Cloudreve的演示站上，经过Twitter某大佬转发后就小小的火了一把，每天都有不少人为了体验这个验证码而注册，也有很多人在问如何将其整合到自己的Cloudreve上，今天就写了篇文章介绍下，顺便补下已经失效的验证码数据库文件。</p></blockquote><p>关于此验证码的更多信息，可参考之前的文章：</p><ul><li><a href="https://aoaoao.me/2016/09/18/e4-b8-80-e4-b8-aa-e4-b8-a7-e5-bf-83-e7-97-85-e7-8b-82-e7-9a-84-e9-aa-8c-e8-af-81-e7-a0-81-e7-9a-84-e8-af-9e-e7-94-9f">https://aoaoao.me/2016/09/18/e4-b8-80-e4-b8-aa-e4-b8-a7-e5-bf-83-e7-97-85-e7-8b-82-e7-9a-84-e9-aa-8c-e8-af-81-e7-a0-81-e7-9a-84-e8-af-9e-e7-94-9f</a></li><li><a href="https://aoaoao.me/2016/12/25/e5-8c-96-e5-ad-a6-e5-bc-8f-e5-8e-86-e5-8f-b2-e4-b8-8a-e7-9a-84-e4-bb-8a-e5-a4-a9-e9-aa-8c-e8-af-81-e7-a0-81-e5-bc-80-e6-ba-90-ef-bc-88-e5-86-85-e5-90-ab-e7-bb-b4-e5-9f-ba-e7-99-be-e7-a7-91-e5-8e-86/">https://aoaoao.me/2016/12/25/e5-8c-96-e5-ad-a6-e5-bc-8f-e5-8e-86-e5-8f-b2-e4-b8-8a-e7-9a-84-e4-bb-8a-e5-a4-a9-e9-aa-8c-e8-af-81-e7-a0-81-e5-bc-80-e6-ba-90-ef-bc-88-e5-86-85-e5-90-ab-e7-bb-b4-e5-9f-ba-e7-99-be-e7-a7-91-e5-8e-86/</a></li></ul><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p>演示地址：<a href="https://pan.aoaoao.me/Login" target="_blank" rel="noopener">https://pan.aoaoao.me/Login</a> 点击“创建账号”</p><p>最基本的形式：输入上图物质分子式，看着复杂，其实挺简单的，数数各个原子个数，按照顺序堆起来就行了。此外还有计算矩阵、说出事件发生日期的验证码，三者随机出现。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://download.aoaoao.me/TIM截图20180830202408.png" alt="化学式.png" title="">                </div>                <div class="image-caption">化学式.png</div>            </figure><h2 id="部署方法"><a href="#部署方法" class="headerlink" title="部署方法"></a>部署方法</h2><h4 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1.前期准备"></a>1.前期准备</h4><p>安装需要的扩展库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require zgldh/gd-text-for-chinese</span><br></pre></td></tr></table></figure><p>然后从 <a href="https://drive.google.com/file/d/1jE5tM9PLnFszgp3Hv_vQzctSgmL8UUtA/view?usp=sharing" target="_blank" rel="noopener">https://drive.google.com/file/d/1jE5tM9PLnFszgp3Hv_vQzctSgmL8UUtA/view?usp=sharing</a> （需爱国上网）下载数据库文件并导入到Cloudreve所在的数据库</p><h4 id="2-修改代码"><a href="#2-修改代码" class="headerlink" title="2.修改代码"></a>2.修改代码</h4><p>在 <code>application/index/view/member/login.html</code> 大概105行原有<code>{/eq}</code>后追加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>验证码(点击图像更换)<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"ctype"</span> <span class="attr">id</span>=<span class="string">"ts"</span> <span class="attr">style</span>=<span class="string">"display: none"</span> <span class="attr">value</span>=<span class="string">"vcode"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"fzs"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"max-width:100%"</span> <span class="attr">id</span>=<span class="string">"v"</span> <span class="attr">onclick</span>=<span class="string">"change()"</span> <span class="attr">src</span>=<span class="string">"/Member/Chemical"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group label-floating is-empty"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"control-label"</span> <span class="attr">for</span>=<span class="string">"focusedInput1"</span>&gt;</span>请输入上图物质的分子式<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"vcode"</span> <span class="attr">id</span>=<span class="string">"vcode"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ev"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"max-width:100%"</span> <span class="attr">id</span>=<span class="string">"ve"</span> <span class="attr">onclick</span>=<span class="string">"change()"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group label-floating is-empty"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"control-label"</span> <span class="attr">for</span>=<span class="string">"focusedInput1"</span>&gt;</span>请输入上图事件发生日期<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"vcode1"</span> <span class="attr">id</span>=<span class="string">"vcode1"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>格式例如：19890604，公元前请加“-”表示<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"jz"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"max-width:100%"</span> <span class="attr">id</span>=<span class="string">"jzi"</span> <span class="attr">onclick</span>=<span class="string">"change()"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group label-floating is-empty"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"control-label"</span> <span class="attr">for</span>=<span class="string">"focusedInput1"</span>&gt;</span>请输入上图结果的方阵的行列式的值<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"vcode3"</span> <span class="attr">id</span>=<span class="string">"vcode3"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>请使用整数表示<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>login.html</code>的尾部<code>&lt;script&gt;</code>标签内或<code>/static/js/login.js</code>中追加：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    r = <span class="built_in">Math</span>.random();</span><br><span class="line">    <span class="keyword">if</span> (r &gt; <span class="number">0.66</span>) &#123;</span><br><span class="line">        $(<span class="string">"#fzs"</span>).hide();</span><br><span class="line">        $(<span class="string">"#jz"</span>).hide();</span><br><span class="line">        $(<span class="string">"#ev"</span>).show();</span><br><span class="line">        $(<span class="string">"#ve"</span>).attr(<span class="string">'src'</span>, <span class="string">'/Member/History?='</span> + <span class="built_in">Math</span>.random());</span><br><span class="line">        ts = <span class="string">"vcode1"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r &lt; <span class="number">0.66</span> &amp;&amp; r &gt; <span class="number">0.33</span>) &#123;</span><br><span class="line">        $(<span class="string">"#ev"</span>).hide();</span><br><span class="line">        $(<span class="string">"#jz"</span>).hide();</span><br><span class="line">        $(<span class="string">"#fzs"</span>).show();</span><br><span class="line">        $(<span class="string">"#v"</span>).attr(<span class="string">'src'</span>, <span class="string">'/Member/Chemical?='</span> + <span class="built_in">Math</span>.random());</span><br><span class="line">        ts = <span class="string">"vcode"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">"#jz"</span>).show();</span><br><span class="line">        $(<span class="string">"#fzs"</span>).hide();</span><br><span class="line">        $(<span class="string">"#ev"</span>).hide();</span><br><span class="line">        $(<span class="string">"#jzi"</span>).attr(<span class="string">'src'</span>, <span class="string">'/Member/Matrix?='</span> + <span class="built_in">Math</span>.random());</span><br><span class="line">        ts = <span class="string">"vcode3"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $(<span class="string">"#ts"</span>).val(ts);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>application/index/controller/Member.php</code>结尾的<code>}</code>前追加：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Chemical</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $id = rand(<span class="number">1</span>,<span class="number">10186</span>);</span><br><span class="line">    $results = Db::name(<span class="string">"vcode"</span>)-&gt;where(<span class="string">"id"</span>,$id)-&gt;find();</span><br><span class="line">    $url =  <span class="string">"https://www.chemicalbook.com/CAS/GIF/"</span>.$results[<span class="string">"cas"</span>].<span class="string">".gif"</span>;</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    Header(<span class="string">"HTTP/1.1 303 See Other"</span>); </span><br><span class="line">    Header(<span class="string">"Location: $url"</span>);  </span><br><span class="line">    session(<span class="string">'Checknum'</span>, $results[<span class="string">"anwser"</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">History</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $id = rand(<span class="number">1</span>,<span class="number">30000</span>);</span><br><span class="line">    $results1 = Db::table(<span class="string">"event"</span>)-&gt;where(<span class="string">"id"</span>,$id)-&gt;find();</span><br><span class="line">    $type = $results1[<span class="string">'y'</span>];</span><br><span class="line">    $year = $results1[<span class="string">'d'</span>];</span><br><span class="line">    $riqi = $results1[<span class="string">'i'</span>];</span><br><span class="line">    $info = $results1[<span class="string">'p'</span>];</span><br><span class="line">    <span class="keyword">if</span>($type != <span class="string">"0"</span>)&#123;</span><br><span class="line">        $id = rand(<span class="number">1</span>,<span class="number">30000</span>);</span><br><span class="line">        $results1 = Db::table(<span class="string">"event"</span>)-&gt;where(<span class="string">"id"</span>,$id)-&gt;find();</span><br><span class="line">        $type = $results1[<span class="string">'y'</span>];</span><br><span class="line">        $year = $results1[<span class="string">'d'</span>];</span><br><span class="line">        $riqi = $results1[<span class="string">'i'</span>];</span><br><span class="line">        $info = $results1[<span class="string">'p'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span> ($type) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'0'</span>:</span><br><span class="line">            $t=<span class="string">"大事件发生"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line">            $t=<span class="string">"人物出生"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">            $t=<span class="string">"人物逝世"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $year = str_replace(<span class="string">"前"</span>, <span class="string">"-"</span>, $year);</span><br><span class="line">    $year = str_replace(<span class="string">"年"</span>, <span class="string">""</span>, $year);</span><br><span class="line">    $month = explode(<span class="string">"月"</span>,$riqi);</span><br><span class="line">    $m = sprintf(<span class="string">"%02d"</span>, $month[<span class="number">0</span>]);</span><br><span class="line">    $d = sprintf(<span class="string">"%02d"</span>, str_replace(<span class="string">"日"</span>,<span class="string">""</span>,$month[<span class="number">1</span>]));</span><br><span class="line">    $ttt=$t.<span class="string">":\n"</span>.$info;</span><br><span class="line">    $width = (strlen($info)&gt;=<span class="number">189</span>) ? <span class="number">500</span> : <span class="number">250</span> ;</span><br><span class="line">    $im = imagecreatetruecolor(<span class="number">500</span>, $width);</span><br><span class="line">    $backgroundColor = imagecolorallocate($im, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    imagefill($im, <span class="number">0</span>, <span class="number">0</span>, $backgroundColor);</span><br><span class="line">    $box = <span class="keyword">new</span> Box($im);</span><br><span class="line">    $box-&gt;setFontFace(ROOT_PATH.<span class="string">'/SourceHanSansCN-Regular.otf'</span>); </span><br><span class="line">    $box-&gt;setFontColor(<span class="keyword">new</span> Color(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    $box-&gt;setTextShadow(<span class="keyword">new</span> Color(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">50</span>), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    $box-&gt;setFontSize(<span class="number">28</span>);</span><br><span class="line">    $box-&gt;setLineHeight(<span class="number">1.5</span>);</span><br><span class="line">    $box-&gt;setBox(<span class="number">20</span>, <span class="number">20</span>, <span class="number">460</span>, <span class="number">460</span>);</span><br><span class="line">    $box-&gt;setTextAlign(<span class="string">'left'</span>, <span class="string">'top'</span>);</span><br><span class="line">    $box-&gt;draw($ttt</span><br><span class="line">    );</span><br><span class="line">    session(<span class="string">'Checknum'</span>, $year.$m.$d);</span><br><span class="line">    header(<span class="string">"Content-type: image/png;"</span>);</span><br><span class="line">    header(<span class="string">"cache-control:no-cache,must-revalidate"</span>);</span><br><span class="line">    imagepng($im);</span><br><span class="line">    imagedestroy($im);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Matrix</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $image = imagecreatefrompng(ROOT_PATH.<span class="string">"/bg.png"</span>);</span><br><span class="line">    $black = imagecolorallocate($image, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    $id = rand(<span class="number">1</span>,<span class="number">22523</span>);</span><br><span class="line">    $size = <span class="number">22</span>;</span><br><span class="line">    $font = ROOT_PATH.<span class="string">'/SourceHanSansCN-Regular.otf'</span>;</span><br><span class="line">    $text=<span class="string">"1"</span>;</span><br><span class="line">    $results1 = Db::table(<span class="string">"m"</span>)-&gt;where(<span class="string">"id"</span>,$id)-&gt;find();</span><br><span class="line">        $m1 = $results1[<span class="string">'m1'</span>];</span><br><span class="line">        $m2 = $results1[<span class="string">'m2'</span>];</span><br><span class="line">        $anwser = $results1[<span class="string">'anwser'</span>];</span><br><span class="line">    $m1_ex = explode(<span class="string">";"</span>,$m1);</span><br><span class="line">    $m2_ex = explode(<span class="string">";"</span>,$m2);</span><br><span class="line">    $row = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">foreach</span> ($m1_ex <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (explode(<span class="string">" "</span>,$value) <span class="keyword">as</span> $key1 =&gt; $value1) &#123;</span><br><span class="line">            $row = $row.$value1.<span class="string">"   "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        imagettftext($image, $size, <span class="number">0</span>, <span class="number">45</span>, <span class="number">130</span>+$key*<span class="number">40</span>, $black, $font, $row);</span><br><span class="line">        $row = <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span> ($m2_ex <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (explode(<span class="string">" "</span>,$value) <span class="keyword">as</span> $key1 =&gt; $value1) &#123;</span><br><span class="line">            $row = $row.$value1.<span class="string">"   "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        imagettftext($image, $size, <span class="number">0</span>, <span class="number">307</span>, <span class="number">130</span>+$key*<span class="number">40</span>, $black, $font, $row);</span><br><span class="line">        $row = <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    header(<span class="string">"cache-control:no-cache,must-revalidate"</span>);</span><br><span class="line">    session(<span class="string">'Checknum'</span>, $anwser);</span><br><span class="line">    header(<span class="string">'content-type: image/png'</span>);</span><br><span class="line">    imagepng($image);</span><br><span class="line">    imagedestroy($image);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Member.php</code> 开头15行左右<code>Class Member ...</code>前追加：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">GDText</span>\<span class="title">Box</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">GDText</span>\<span class="title">Color</span>;</span><br></pre></td></tr></table></figure><p><code>31</code>行左右<code>Register</code>方法替换为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Register</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $ctype = input(<span class="string">"post.ctype"</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(input(<span class="string">"post."</span>.$ctype)) || input(<span class="string">"post."</span>.$ctype)!= session(<span class="string">"Checknum"</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> json([<span class="string">'code'</span> =&gt; <span class="string">'1'</span>,<span class="string">'message'</span> =&gt; <span class="string">"验证码错误"</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(input(<span class="string">'?post.username-reg'</span>) &amp;&amp; input(<span class="string">'?post.password-reg'</span>))&#123;</span><br><span class="line">        $regAction = User::register(input(<span class="string">'post.username-reg'</span>),input(<span class="string">'post.password-reg'</span>),input(<span class="string">'post.captchaCode'</span>));</span><br><span class="line">        <span class="keyword">if</span> ($regAction[<span class="number">0</span>])&#123;</span><br><span class="line">            <span class="keyword">return</span> json([<span class="string">'code'</span> =&gt; <span class="string">'200'</span>,<span class="string">'message'</span> =&gt; $regAction[<span class="number">1</span>]]);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> json([<span class="string">'code'</span> =&gt; <span class="string">'1'</span>,<span class="string">'message'</span> =&gt; $regAction[<span class="number">1</span>]]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> json([<span class="string">'code'</span> =&gt; <span class="string">'1'</span>,<span class="string">'message'</span> =&gt; <span class="string">"信息不完整"</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;这个验证码最早是给树洞外链开发的，目的只是为了娱乐，并没有想到真的防机器人。后来被我迁移到了Cloudreve的演示站上，经过Twitter某大佬转发后就小小的火了一把，每天都有不少人为了体验这个验证码而注册，也有很多人在问如何将其整合到自己的Cl
      
    
    </summary>
    
    
      <category term="Cloudreve" scheme="https://aoaoao.me/tags/Cloudreve/"/>
    
      <category term="验证码" scheme="https://aoaoao.me/tags/%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://aoaoao.me/2018/04/15/hello-world/"/>
    <id>https://aoaoao.me/2018/04/15/hello-world/</id>
    <published>2018-04-15T11:26:30.236Z</published>
    <updated>2018-04-16T01:10:36.563Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><p>博客已迁移至Hexo，目前感觉良好。尝试着把WordPress的内容转移了过来，但目前处理的还不是很完美。</p><h2 id="保留的内容"><a href="#保留的内容" class="headerlink" title="保留的内容"></a>保留的内容</h2><ul><li>文章内容数据</li><li>文章tag</li><li>友链</li></ul><h2 id="丢失的内容"><a href="#丢失的内容" class="headerlink" title="丢失的内容"></a>丢失的内容</h2><ul><li>评论数据</li><li>文章头图</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>构建一个在线ASCII视频流服务</title>
    <link href="https://aoaoao.me/2018/03/26/e6-9e-84-e5-bb-ba-e4-b8-80-e4-b8-aa-e5-9c-a8-e7-ba-bfascii-e8-a7-86-e9-a2-91-e6-b5-81-e6-9c-8d-e5-8a-a1/"/>
    <id>https://aoaoao.me/2018/03/26/e6-9e-84-e5-bb-ba-e4-b8-80-e4-b8-aa-e5-9c-a8-e7-ba-bfascii-e8-a7-86-e9-a2-91-e6-b5-81-e6-9c-8d-e5-8a-a1/</id>
    <published>2018-03-26T11:12:41.000Z</published>
    <updated>2018-04-16T01:13:31.872Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是ASCII视频流服务？"><a href="#什么是ASCII视频流服务？" class="headerlink" title="什么是ASCII视频流服务？"></a>什么是ASCII视频流服务？</h2><p>其实这个名字是咱胡乱起的，具体叫啥我也不清楚，但效果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2018/03/图像-1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>大家可以在自己的命令行里试下，效果比较暴力，就不截图了</p><h2 id="如何搭建这么一个服务？"><a href="#如何搭建这么一个服务？" class="headerlink" title="如何搭建这么一个服务？"></a>如何搭建这么一个服务？</h2><p>需要用到的工具：</p><ul><li>ffmpeg</li><li><a href="https://github.com/hit9/img2txt" target="_blank" rel="noopener">hit9/img2txt</a></li><li><a href="https://github.com/HFO4/plus1s.live" target="_blank" rel="noopener">HFO4/plus1s.live</a></li><li><p>Go和Python的运行环境<br><strong>1.执行以下命令将视频中的某个片段（或全部）截取为图像</strong></p><p>ffmpeg -i HongkongReporter.mp4 -r 5 -ss 00:01:13 -t 00:00:15 %03d.png<code>&lt;/pre&gt;以上命令代表将</code>HongkongReporter.mp4`的第1分13秒后的15秒以每秒5帧的速度保存为图像，图像名格式为001.png 002.png ……<br>效果如下：<br><img src="https://cdn.aoaoao.me/wp-content/uploads/2018/03/图像-2.png" alt=""></p><p><strong>2.使用修改过的hit9/img2txt将图像转换为ASCII画.</strong></p><p>原版hit9/img2txt只能单张转换，我稍微改了下，可以批量转换并保存为txt。修改后的版本：<a href="https://github.com/HFO4/img2txt/blob/gh-pages/img2txt.py" target="_blank" rel="noopener">https://github.com/HFO4/img2txt/blob/gh-pages/img2txt.py</a></p><p>clone下来后修改<code>img2txt.py</code><a href="https://github.com/HFO4/img2txt/blob/gh-pages/img2txt.py#L246" target="_blank" rel="noopener">第246行</a>的目录为上一步存放图像的目录，然后执行：<br><pre class="language-shell"><code>pip install img2txt.pypython img2txt.py h</code></pre><br>稍等片刻，ASCII字符文件会存放到与<code>img2txt.py</code>同级的<code>pic</code>目录下</p><p><strong>3.部署在线服务</strong></p><p>将<a href="https://github.com/HFO4/plus1s.live" target="_blank" rel="noopener">HFO4/plus1s.live</a>克隆下来，并将上一步得到的pic目录替换到此项目的目录下，修改<code>stream.go</code>的<a href="https://github.com/HFO4/plus1s.live/blob/master/stream.go#L13" target="_blank" rel="noopener">第13行</a>为你得到的单帧图像的总个数。保存后执行：<br><pre class="language-shell">`go build stream.go<br>./stream</pre></p></li></ul><p>然后程序会默认开放1926端口，使用<code>curl 您的ip:1926</code>命令即可查看效果。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是ASCII视频流服务？&quot;&gt;&lt;a href=&quot;#什么是ASCII视频流服务？&quot; class=&quot;headerlink&quot; title=&quot;什么是ASCII视频流服务？&quot;&gt;&lt;/a&gt;什么是ASCII视频流服务？&lt;/h2&gt;&lt;p&gt;其实这个名字是咱胡乱起的，具体叫啥我也不清楚
      
    
    </summary>
    
      <category term="正常的文章" scheme="https://aoaoao.me/categories/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="Go" scheme="https://aoaoao.me/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Cloudreve1.0 - 随时随地，云端等你</title>
    <link href="https://aoaoao.me/2018/02/04/cloudreve1-0-e9-9a-8f-e6-97-b6-e9-9a-8f-e5-9c-b0-ef-bc-8c-e4-ba-91-e7-ab-af-e7-ad-89-e4-bd-a0/"/>
    <id>https://aoaoao.me/2018/02/04/cloudreve1-0-e9-9a-8f-e6-97-b6-e9-9a-8f-e5-9c-b0-ef-bc-8c-e4-ba-91-e7-ab-af-e7-ad-89-e4-bd-a0/</id>
    <published>2018-02-04T09:15:03.000Z</published>
    <updated>2018-04-16T01:13:30.826Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>终于终于终于跳票156天后，Cloudreve1.0 发布了<br>Cloudreve是一款基于ThinkPHP构建的网盘系统，能够助您以较低成本快速搭建起公私兼备的网盘。</p></blockquote><p>目前已经实现的特性：</p><ul><li>快速对接多家云存储，支持七牛、又拍云、阿里云OSS、AWS S3，当然，还有本地存储</li><li>可限制单文件最大大小、MIMEType、文件后缀、用户可用容量</li><li>图片、音频、视频、文本、Markdown、Ofiice文档 在线预览</li><li>移动端全站响应式布局</li><li>文件、目录分享系统，可创建私有分享或公开分享链接</li><li>用户个人主页，可查看用户所有分享</li><li>多用户系统、用户组支持</li><li>初步完善的后台，方便管理</li><li>拖拽上传、分片上传、断点续传、下载限速（*实验性功能）</li><li>多上传策略，可为不同用户组分配不同策略</li><li>用户组基础权限设置</li><li>WebDAV协议支持<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2018/02/homepage.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><p>这个项目在高考前就已经开始构思了，在暑假时开始编写，但没过几天热情就被扑灭，真真切切感觉到了要实现当初构思的目标，是很难的，再加上那时刚入Steam的坑，没写几天就放弃了（<a href="https://github.com/HFO4" target="_blank" rel="noopener">GitHub profile</a> 里可以看出我颓废的过程…）。</p><p>到大学后突然又来了热情，利用空闲时间一鼓作气坚持写了下来，到了寒假这几天更是高产，再加上同学的协助，直接把都是bug的1.0搞了出来.</p><h3 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h3><p>GitHub：<a href="https://github.com/HFO4/Cloudreve" target="_blank" rel="noopener">https://github.com/HFO4/Cloudreve</a></p><p>Telegram Group：<a href="https://t.me/joinchat/ChJY90fAOmaJNRROZxCXRQ" target="_blank" rel="noopener">https://t.me/joinchat/ChJY90fAOmaJNRROZxCXRQ</a></p><p>（还没完工的）官网：<a href="https://cloudreve.org/" target="_blank" rel="noopener">https://cloudreve.org/</a></p><p>演示：<a href="https://pan.aoaoao.me" target="_blank" rel="noopener">https://pan.aoaoao.me</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;终于终于终于跳票156天后，Cloudreve1.0 发布了&lt;br&gt;Cloudreve是一款基于ThinkPHP构建的网盘系统，能够助您以较低成本快速搭建起公私兼备的网盘。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;目前已经实现的特性：&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="正常的文章" scheme="https://aoaoao.me/categories/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="PHP" scheme="https://aoaoao.me/tags/PHP/"/>
    
      <category term="云" scheme="https://aoaoao.me/tags/%E4%BA%91/"/>
    
      <category term="网盘" scheme="https://aoaoao.me/tags/%E7%BD%91%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>像素化隐藏你的JS代码</title>
    <link href="https://aoaoao.me/2018/02/02/e5-83-8f-e7-b4-a0-e5-8c-96-e9-9a-90-e8-97-8f-e4-bd-a0-e7-9a-84js-e4-bb-a3-e7-a0-81/"/>
    <id>https://aoaoao.me/2018/02/02/e5-83-8f-e7-b4-a0-e5-8c-96-e9-9a-90-e8-97-8f-e4-bd-a0-e7-9a-84js-e4-bb-a3-e7-a0-81/</id>
    <published>2018-02-02T09:21:32.000Z</published>
    <updated>2018-04-15T11:37:48.053Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要灵感来自：<a href="https://imququ.com/post/code2png-encoder.html" target="_blank" rel="noopener">https://imququ.com/post/code2png-encoder.html</a> 我改变了原文的解码方式，结合之前写的像素隐写<a href="https://hide.aoaoao.me/" target="_blank" rel="noopener">https://hide.aoaoao.me/</a> 使得代码能够隐藏在现有图片中。</p><p>比如下面代码中的md5加密函数就写在了图片中。</p><pre><code>&amp;lt;script type=&quot;text/javascript&quot;&amp;gt; var Decode=function(c){var e=c.height,a=c.width,b=document.createElement(&quot;canvas&quot;);b.height=e;b.width=a;b=b.getContext(&quot;2d&quot;);b.drawImage(c,0,0);c=b.getImageData(0,0,a,e);b=[];for(d=0;d&amp;lt;a*e*4;d+=4)0!=(d+4)%(4*a)&amp;amp;&amp;amp;[].push.apply(b,[].slice.call(c.data,d,d+3));c=e=0;for(a=&quot;&quot;;c&amp;lt;b.length&amp;amp;&amp;amp;(16&amp;gt;=c||(0==b[c]%2?(e++,a+=&quot;1&quot;):(e=0,a+=&quot;0&quot;),17!=e));c++);a=a.slice(0,-16);a=a.replace(/[\s]/g,&quot;&quot;).replace(/(\d{16})(?=\d)/g,&quot;$1 &quot;);e=&quot;&quot;;a=a.split(&quot; &quot;);for(c=0;c&amp;lt;a.length;c++)b=a[c],16==b.length&amp;amp;&amp;amp;(b=parseInt(b,2),e+=String.fromCharCode(b));return e}; var img = new Image(); img.onload = function() {     Function(Decode(img))();     alert(md5(&apos;hello&apos;)); }; img.crossOrigin = &apos;*&apos;; img.src = &apos;https://download.aoaoao.me/25054098_result.png&apos;;&amp;lt;/script&amp;gt;</code></pre><p>效果预览：<a href="https://jsfiddle.net/de885aga/" target="_blank" rel="noopener">https://jsfiddle.net/de885aga/</a></p><p>而实际上加载的这张图片看上去并没有什么特别之处：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://download.aoaoao.me/25054098_result.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>但如果你到<a href="https://hide.aoaoao.me" target="_blank" rel="noopener">https://hide.aoaoao.me</a>解密一下就能看到其中隐藏的代码。</p><p>又水了一篇文章率 开心(〜￣△￣)〜</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文主要灵感来自：&lt;a href=&quot;https://imququ.com/post/code2png-encoder.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://imququ.com/post/code2png-encoder.
      
    
    </summary>
    
      <category term="正常的文章" scheme="https://aoaoao.me/categories/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="隐写" scheme="https://aoaoao.me/tags/%E9%9A%90%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>[Happy New Year]2018年的红包（顺带有17年回顾）</title>
    <link href="https://aoaoao.me/2017/12/31/happy-new-year2018-e5-b9-b4-e7-9a-84-e7-ba-a2-e5-8c-85-ef-bc-88-e9-a1-ba-e5-b8-a6-e6-9c-8917-e5-b9-b4-e5-9b-9e-e9-a1-be-ef-bc-89/"/>
    <id>https://aoaoao.me/2017/12/31/happy-new-year2018-e5-b9-b4-e7-9a-84-e7-ba-a2-e5-8c-85-ef-bc-88-e9-a1-ba-e5-b8-a6-e6-9c-8917-e5-b9-b4-e5-9b-9e-e9-a1-be-ef-bc-89/</id>
    <published>2017-12-31T02:29:54.000Z</published>
    <updated>2018-04-16T01:13:33.028Z</updated>
    
    <content type="html"><![CDATA[<p>17年开始的时候说过，今年的主旋律是高考，所以我也没有啥有意思的事情回顾(›´ω`‹ )</p><p><strong>以下内容纯属我瞎jb扯，最下面是正文。</strong></p><h2 id="高三"><a href="#高三" class="headerlink" title="高三"></a>高三</h2><p>我的高三并没有预期中的那种拼尽全力，忘我投入的感觉，更像是学校老师让我做什么，我就做什么。高三的记忆很模糊，不想高一高二时那么清晰的记得每个星期发生了什么，高三千篇一律的生活反而让我觉得高三过的很快。我印象最深的是高考前的那几天，根据学校安排，原教室作为考场，我们搬到高一教学楼继续自习。最后一天的下午，班主任特意把准考证用红包包起来发给我们。当最后一节自习的下课铃敲响时，我才有种焕然大悟的感觉:我的高三已经结束了。</p><h2 id="高考"><a href="#高考" class="headerlink" title="高考"></a>高考</h2><p>我曾经跟同桌总结了毕业前后最爽的三个时间:高考英语作完后到交卷前、英语考试结束铃声响起、高考结束的当天晚上。考英语时天气由大晴天突然变成大风+阴天，给这次高考加入了一种魔幻色彩。高考结束出校门时，看见好多高一高二的同学搬着书走进学校准备晚自习，突然想起两年前我也和他们一样，现在的他们肯定也想当初的我一样，羡慕着走出考场的那一刻。</p><h2 id="录取"><a href="#录取" class="headerlink" title="录取"></a>录取</h2><p>高考考的怎么样？我只能说很正常很正常的发挥，没有很好也没有很差，但离当初的目标还有一段距离。高考过后是自主招生，我通过了两所学校的自主招生初审，但笔试面试只能选择一所。爸妈劝我去更好一点的那所闯一闯，而我最终选择了更为稳妥的那所。现在看来，当初的那个选择不是那么正确，甚至有些愚蠢。我最终被录取到了电子信息工程专业，一个排在我第五选择的专业。当初看到录取结果还是很难受的，因为我前四个专业都是计算机类的，结果都没录取，但是这个专业也不算一个太糟的结果。我平时对软件硬件方向都挺感兴趣，而这个专业正好结合了两个方向。（但是来到大学后的一系列事件坚定了我转专业的想法）</p><h2 id="大学"><a href="#大学" class="headerlink" title="大学"></a>大学</h2><p>虽然碰了几次壁，目前来说大学生活还算满意，认识了许多有相同兴趣的小伙伴。但我对我的专业比较失望，主要原因还是学院又红又专的官僚气息和身边浮躁的氛围。所以我准备转专业至软件工程，目前还在等教务处通知。</p><h2 id="红包"><a href="#红包" class="headerlink" title="红包"></a>红包</h2><p>以上内容纯属我瞎jb扯，下面是正文。<br>这次准备了几个新年红包，领取方法：<br><strong>设法让我寝室桌上的米家台灯闪烁几下，然后通过任意社交渠道私信我。</strong><br>（听起来有点扯，但细心的话是能找到方法的）</p><h2 id="解密方法公布"><a href="#解密方法公布" class="headerlink" title="解密方法公布"></a>解密方法公布</h2><p>几天前我发过一条推：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/12/图像-1-1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>推文的图片是一个ifttt任务的截图：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/12/DSNMDSPVwAIQXFD.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>由图可知，只要关注我的推特，台灯就会切换到flash mode，也就是闪烁几下。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;17年开始的时候说过，今年的主旋律是高考，所以我也没有啥有意思的事情回顾(›´ω`‹ )&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以下内容纯属我瞎jb扯，最下面是正文。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;高三&quot;&gt;&lt;a href=&quot;#高三&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="正常的文章" scheme="https://aoaoao.me/categories/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="新年" scheme="https://aoaoao.me/tags/%E6%96%B0%E5%B9%B4/"/>
    
      <category term="红包" scheme="https://aoaoao.me/tags/%E7%BA%A2%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>将课表导入日历，让日历再次伟大</title>
    <link href="https://aoaoao.me/2017/12/22/e5-b0-86-e8-af-be-e8-a1-a8-e5-af-bc-e5-85-a5-e6-97-a5-e5-8e-86-ef-bc-8c-e8-ae-a9-e6-97-a5-e5-8e-86-e5-86-8d-e6-ac-a1-e4-bc-9f-e5-a4-a7/"/>
    <id>https://aoaoao.me/2017/12/22/e5-b0-86-e8-af-be-e8-a1-a8-e5-af-bc-e5-85-a5-e6-97-a5-e5-8e-86-ef-bc-8c-e8-ae-a9-e6-97-a5-e5-8e-86-e5-86-8d-e6-ac-a1-e4-bc-9f-e5-a4-a7/</id>
    <published>2017-12-22T07:01:41.000Z</published>
    <updated>2018-04-16T01:13:31.607Z</updated>
    
    <content type="html"><![CDATA[<p>上大学以后基本上每个人都离不开课表，因为每节课的时间、地点都不一样，就算到了期末也要时不时拿出课表看下教室号。我刚开始用的是超级课表，因为导入很方便，但这玩意儿每次启动都有5s广告，一大堆用不到的社交功能杂糅在一起，甚至有的广告会伪装成你的课程显示在你的课表上。现在每个手机都有自带的日历应用，把课表导入到日历岂不是美滋滋？我在某安发现了一款“开源课表”APP，可以导出课表，但无奈不支持我的大学，所以就自己写了一个。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/12/图像-1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>并且支持使用Google账户登陆后一键导入Google日历<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/12/图像-2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>地址：<a href="https://aoaoao.me/api/t.html">https://aoaoao.me/api/t.html</a><br>目前只支持重庆大学的教务网自动导出，其他使用青果教务系统的大学理论上也是可以的，可以将课表页的HTML代码粘贴到下方的“手动导入”区域内尝试导出（没做过测试，不保证成功）。</p><p>导如到Google日历效果如下：<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/12/Screenshot_2017-12-20-13-10-40-760_com.google.and_.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>原理很简单，就是获取课表html解析后输出ics文件(<a href="https://tools.ietf.org/html/rfc5545" target="_blank" rel="noopener">RFC5545</a>),基本上手机日历都支持导入此格式（MIUI除外）。奇怪的是Google日历手机版导入ics文件后会玄学般报错”无法发起活动”，stack overflow上不止我一个人遇到这种问题，而Google给出的解决方案竟然是重装日历APP(Excuse me?)。最终我采用的方案是使用Google的Calendar API实现自动导入，目前效果还不错，当然你也可以在PC网页端导入ics文件。<br>代码：<a href="https://github.com/HFO4/FuckSuperClassTimetable" target="_blank" rel="noopener">https://github.com/HFO4/FuckSuperClassTimetable</a><br>写的很渣，不能见人的那种，而且没用正则（根本不会唉）。想测试手动导入的话可以用test.html里面的内容试一下。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上大学以后基本上每个人都离不开课表，因为每节课的时间、地点都不一样，就算到了期末也要时不时拿出课表看下教室号。我刚开始用的是超级课表，因为导入很方便，但这玩意儿每次启动都有5s广告，一大堆用不到的社交功能杂糅在一起，甚至有的广告会伪装成你的课程显示在你的课表上。现在每个手机
      
    
    </summary>
    
      <category term="正常的文章" scheme="https://aoaoao.me/categories/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="python" scheme="https://aoaoao.me/tags/python/"/>
    
      <category term="Google" scheme="https://aoaoao.me/tags/Google/"/>
    
  </entry>
  
  <entry>
    <title>响应国家政策，本站评论需实名认证后使用</title>
    <link href="https://aoaoao.me/2017/08/31/e5-93-8d-e5-ba-94-e5-9b-bd-e5-ae-b6-e6-94-bf-e7-ad-96-ef-bc-8c-e6-9c-ac-e7-ab-99-e8-af-84-e8-ae-ba-e9-9c-80-e5-ae-9e-e5-90-8d-e8-ae-a4-e8-af-81-e5-90-8e-e4-bd-bf-e7-94-a8/"/>
    <id>https://aoaoao.me/2017/08/31/e5-93-8d-e5-ba-94-e5-9b-bd-e5-ae-b6-e6-94-bf-e7-ad-96-ef-bc-8c-e6-9c-ac-e7-ab-99-e8-af-84-e8-ae-ba-e9-9c-80-e5-ae-9e-e5-90-8d-e8-ae-a4-e8-af-81-e5-90-8e-e4-bd-bf-e7-94-a8/</id>
    <published>2017-08-30T20:42:03.000Z</published>
    <updated>2018-04-16T01:13:31.458Z</updated>
    
    <content type="html"><![CDATA[<p>根据网信办《互联网跟帖评论服务管理规定》，要求网站按照“后台实名、前台自愿”原则，对注册用户进行真实身份信息认证，不得向未认证真实身份信息的用户提供跟帖评论服务。为了充分落实《规定》精神、维护国家安全和公共利益、弘扬社会主义核心价值观，<del>即日起在树洞博客评论需在本页面实名认证后才能进行。</del></p><h3 id="认证流程"><a href="#认证流程" class="headerlink" title="认证流程"></a>认证流程</h3><ol><li>打开<a href="https://rz.aoaoao.me" target="_blank" rel="noopener">https://rz.aoaoao.me</a> ，点同意<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/08/QQ截图20170831123748.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li><li>准确填写信息并提交：<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/08/QQ截图20170831124024.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li><li>提示成功后即可使用认证的邮箱进行评论。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;根据网信办《互联网跟帖评论服务管理规定》，要求网站按照“后台实名、前台自愿”原则，对注册用户进行真实身份信息认证，不得向未认证真实身份信息的用户提供跟帖评论服务。为了充分落实《规定》精神、维护国家安全和公共利益、弘扬社会主义核心价值观，&lt;del&gt;即日起在树洞博客评论需在本页
      
    
    </summary>
    
      <category term="正常的文章" scheme="https://aoaoao.me/categories/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="实名认证" scheme="https://aoaoao.me/tags/%E5%AE%9E%E5%90%8D%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>B站热门番剧观众弃坑指数排行榜</title>
    <link href="https://aoaoao.me/2017/08/24/b-e7-ab-99-e7-83-ad-e9-97-a8-e7-95-aa-e5-89-a7-e8-a7-82-e4-bc-97-e5-bc-83-e5-9d-91-e6-8c-87-e6-95-b0-e6-8e-92-e8-a1-8c-e6-a6-9c/"/>
    <id>https://aoaoao.me/2017/08/24/b-e7-ab-99-e7-83-ad-e9-97-a8-e7-95-aa-e5-89-a7-e8-a7-82-e4-bc-97-e5-bc-83-e5-9d-91-e6-8c-87-e6-95-b0-e6-8e-92-e8-a1-8c-e6-a6-9c/</id>
    <published>2017-08-23T19:12:29.000Z</published>
    <updated>2018-04-15T11:37:48.051Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计算原理"><a href="#计算原理" class="headerlink" title="计算原理"></a>计算原理</h2><p>一般情况下，番剧的单集播放量会随着集数的增加而减少，一步番剧播放量减少越剧烈，则说明该番观众中途弃坑人数较多，番剧可能剧情乏味或中途崩坏。我采集了B追番人数在前150名的番剧的播放数据，将集数扩大后与单集播放量进行最小二乘法拟合，以得到直线的斜率为依据进行排名。排行榜视频传到了B站：<a href="http://www.bilibili.com/video/av13742689/" target="_blank" rel="noopener">http://www.bilibili.com/video/av13742689/</a>。 由于B站部分番剧采用分P分集的方式，无法获取到具体数据，故在本榜单中略去。</p><h2 id="完整榜单"><a href="#完整榜单" class="headerlink" title="完整榜单"></a>完整榜单</h2><div align="&quot;center"><br><table><br><tbody><br><tr><br><th>番剧名</th><br><th>弹幕总数</th><br><th>观众损失指数</th><br></tr><br><tr><br><td>甲铁城的卡巴内瑞</td><br><td>1042966</td><br><td>-2.258323648</td><br></tr><br><tr><br><td>GAMERS电玩咖！</td><br><td>169133</td><br><td>0.144540753</td><br></tr><br><tr><br><td>三年E班</td><br><td>1951008</td><br><td>0.462847114</td><br></tr><br><tr><br><td>Fate/stay night [Unlimited Bla..</td><br><td>1965716</td><br><td>0.626720716</td><br></tr><br><tr><br><td>斩·赤红之瞳！</td><br><td>1607920</td><br><td>0.741229817</td><br></tr><br><tr><br><td>双星之阴阳师</td><br><td>2297276</td><br><td>0.831016728</td><br></tr><br><tr><br><td>命运石之门</td><br><td>730135</td><br><td>0.875223121</td><br></tr><br><tr><br><td>Re：从零开始的异世界生活</td><br><td>6907632</td><br><td>0.961437343</td><br></tr><br><tr><br><td>小魔女学园</td><br><td>383944</td><br><td>1.050238504</td><br></tr><br><tr><br><td>终结的炽天使</td><br><td>1487069</td><br><td>1.118167605</td><br></tr><br><tr><br><td>四月是你的谎言</td><br><td>1303311</td><br><td>1.177939641</td><br></tr><br><tr><br><td>Charlotte</td><br><td>2664830</td><br><td>1.219308438</td><br></tr><br><tr><br><td>齐木楠雄的灾难</td><br><td>638553</td><br><td>1.268257247</td><br></tr><br><tr><br><td>OVERLORD</td><br><td>1093162</td><br><td>1.515096923</td><br></tr><br><tr><br><td>野良神</td><br><td>2213460</td><br><td>1.550257659</td><br></tr><br><tr><br><td>重装武器</td><br><td>1102233</td><br><td>1.666549249</td><br></tr><br><tr><br><td>日常</td><br><td>1062360</td><br><td>1.673067295</td><br></tr><br><tr><br><td>超时空要塞Δ</td><br><td>610014</td><br><td>1.72636779</td><br></tr><br><tr><br><td>传颂之物 虚伪的假面</td><br><td>928716</td><br><td>1.747128157</td><br></tr><br><tr><br><td>3月的狮子</td><br><td>146376</td><br><td>1.79793033</td><br></tr><br><tr><br><td>食戟之灵</td><br><td>2160905</td><br><td>1.802290751</td><br></tr><br><tr><br><td>博人传 火影忍者新时代</td><br><td>884311</td><br><td>1.949803763</td><br></tr><br><tr><br><td>自由之翼</td><br><td>26464</td><br><td>2.224237707</td><br></tr><br><tr><br><td>TRICKSTER 少年侦探团</td><br><td>173427</td><br><td>2.224413676</td><br></tr><br><tr><br><td>我的青春恋爱物语果然有问题。</td><br><td>930185</td><br><td>2.248424329</td><br></tr><br><tr><br><td>幻界战线</td><br><td>892228</td><br><td>2.401250763</td><br></tr><br><tr><br><td>终结的炽天使</td><br><td>910205</td><br><td>2.436868124</td><br></tr><br><tr><br><td>学战都市Asterisk</td><br><td>1018439</td><br><td>2.451519477</td><br></tr><br><tr><br><td>樱花任务</td><br><td>192730</td><br><td>2.496338531</td><br></tr><br><tr><br><td>伪恋</td><br><td>817620</td><br><td>2.705141542</td><br></tr><br><tr><br><td>路人超能100(灵能百分百)</td><br><td>1172382</td><br><td>2.779356326</td><br></tr><br><tr><br><td>干物妹！小埋</td><br><td>3373142</td><br><td>2.910871665</td><br></tr><br><tr><br><td>弹丸论破3 The End of 希望峰学园</td><br><td>698807</td><br><td>2.967848909</td><br></tr><br><tr><br><td>Re:CREATORS</td><br><td>829189</td><br><td>3.070127201</td><br></tr><br><tr><br><td>甘城光辉游乐园</td><br><td>486927</td><br><td>3.112907413</td><br></tr><br><tr><br><td>Fate/stay night [Unlimited Bla..</td><br><td>1469358</td><br><td>3.122084955</td><br></tr><br><tr><br><td>日常系的异能战斗</td><br><td>419047</td><br><td>3.145179423</td><br></tr><br><tr><br><td>星期一的丰满</td><br><td>75037</td><br><td>3.221649311</td><br></tr><br><tr><br><td>噬神者</td><br><td>671752</td><br><td>3.315299411</td><br></tr><br><tr><br><td>迷糊餐厅</td><br><td>160300</td><br><td>3.328996671</td><br></tr><br><tr><br><td>月色真美</td><br><td>898054</td><br><td>3.355742336</td><br></tr><br><tr><br><td>落第骑士英雄谭</td><br><td>1810528</td><br><td>3.415607209</td><br></tr><br><tr><br><td>Love Live! Sunshine!!</td><br><td>1348396</td><br><td>3.432030523</td><br></tr><br><tr><br><td>变态王子与不笑猫</td><br><td>633261</td><br><td>3.449631042</td><br></tr><br><tr><br><td>弹丸论破3 The End of 希望峰学园</td><br><td>768724</td><br><td>3.469733282</td><br></tr><br><tr><br><td>银仙</td><br><td>528142</td><br><td>3.495181835</td><br></tr><br><tr><br><td>驱魔少年</td><br><td>303371</td><br><td>3.596220884</td><br></tr><br><tr><br><td>路人女主的养成方法</td><br><td>1908446</td><br><td>3.597648879</td><br></tr><br><tr><br><td>六花的勇者</td><br><td>965799</td><br><td>3.65088434</td><br></tr><br><tr><br><td>K</td><br><td>1888335</td><br><td>3.659182418</td><br></tr><br><tr><br><td>一周的朋友。</td><br><td>422299</td><br><td>3.678132515</td><br></tr><br><tr><br><td>Rewrite</td><br><td>649103</td><br><td>3.726841885</td><br></tr><br><tr><br><td>埃罗芒阿老师</td><br><td>2910490</td><br><td>3.754721348</td><br></tr><br><tr><br><td>对魔导学园35试验小队</td><br><td>648691</td><br><td>3.789620394</td><br></tr><br><tr><br><td>这个美术社大有问题！</td><br><td>1398356</td><br><td>3.807777201</td><br></tr><br><tr><br><td>终物语</td><br><td>351978</td><br><td>3.818677737</td><br></tr><br><tr><br><td>NEW GAME!</td><br><td>981468</td><br><td>3.864370619</td><br></tr><br><tr><br><td>热诚传说X</td><br><td>1151522</td><br><td>3.906996542</td><br></tr><br><tr><br><td>请问您今天要来点兔子吗</td><br><td>835887</td><br><td>3.913232858</td><br></tr><br><tr><br><td>TRINITY SEVEN 七人魔法使</td><br><td>315836</td><br><td>3.923909271</td><br></tr><br><tr><br><td>小林家的龙女仆</td><br><td>1615409</td><br><td>3.980325447</td><br></tr><br><tr><br><td>问题儿童都来自异世界</td><br><td>309103</td><br><td>3.986187118</td><br></tr><br><tr><br><td>黑白来看守所</td><br><td>162274</td><br><td>4.017919302</td><br></tr><br><tr><br><td>我被绑架到贵族女校当庶民样本</td><br><td>1934730</td><br><td>4.030563818</td><br></tr><br><tr><br><td>学园孤岛</td><br><td>1438837</td><br><td>4.036371447</td><br></tr><br><tr><br><td>黑白来看守所</td><br><td>361127</td><br><td>4.156150414</td><br></tr><br><tr><br><td>从零开始的魔法书</td><br><td>484669</td><br><td>4.167026311</td><br></tr><br><tr><br><td>百武装战记</td><br><td>1559980</td><br><td>4.167667996</td><br></tr><br><tr><br><td>线上游戏的老婆不可能是女生</td><br><td>2198943</td><br><td>4.186430272</td><br></tr><br><tr><br><td>超自然9人组</td><br><td>178777</td><br><td>4.233473694</td><br></tr><br><tr><br><td>时钟机关之星</td><br><td>207921</td><br><td>4.25875271</td><br></tr><br><tr><br><td>在下坂本，有何贵干</td><br><td>5260979</td><br><td>4.28715556</td><br></tr><br><tr><br><td>爱丽丝和藏六</td><br><td>156670</td><br><td>4.3169219</td><br></tr><br><tr><br><td>刀剑乱舞-花丸-</td><br><td>672763</td><br><td>4.356210612</td><br></tr><br><tr><br><td>迷家</td><br><td>1200998</td><br><td>4.39426238</td><br></tr><br><tr><br><td>月歌</td><br><td>373754</td><br><td>4.399806235</td><br></tr><br><tr><br><td>苍之彼方的四重奏</td><br><td>673662</td><br><td>4.428013961</td><br></tr><br><tr><br><td>小桃小栗Love Love物语</td><br><td>527046</td><br><td>4.443557446</td><br></tr><br><tr><br><td>SUPER LOVERS</td><br><td>245185</td><br><td>4.460685361</td><br></tr><br><tr><br><td>就算是哥哥有爱就没问题了对吧</td><br><td>553701</td><br><td>4.463771515</td><br></tr><br><tr><br><td>夏目友人帐</td><br><td>747213</td><br><td>4.473388087</td><br></tr><br><tr><br><td>ACCA13区监察课</td><br><td>102342</td><br><td>4.504372808</td><br></tr><br><tr><br><td>恋爱暴君</td><br><td>472136</td><br><td>4.651204747</td><br></tr><br><tr><br><td>王室教师海涅</td><br><td>286910</td><br><td>4.659983016</td><br></tr><br><tr><br><td>三年E班Q</td><br><td>94746</td><br><td>4.677076817</td><br></tr><br><tr><br><td>怪怪守护神</td><br><td>248197</td><br><td>4.678423565</td><br></tr><br><tr><br><td>我太受欢迎了该怎么办</td><br><td>986738</td><br><td>4.704850976</td><br></tr><br><tr><br><td>秋叶原之旅 THE ANIMATION</td><br><td>169757</td><br><td>4.722279333</td><br></tr><br><tr><br><td>樱子小姐的脚下埋着尸体</td><br><td>847554</td><br><td>4.868618686</td><br></tr><br><tr><br><td>少女编号</td><br><td>404364</td><br><td>4.87169268</td><br></tr><br><tr><br><td>我，要成为双马尾。</td><br><td>787151</td><br><td>4.885292437</td><br></tr><br><tr><br><td>腐男子高校生活</td><br><td>156403</td><br><td>4.89976437</td><br></tr><br><tr><br><td>雏子的笔记</td><br><td>196444</td><br><td>4.989178298</td><br></tr><br><tr><br><td>初恋怪兽</td><br><td>552774</td><br><td>4.991610092</td><br></tr><br><tr><br><td>GANGSTA.</td><br><td>353105</td><br><td>4.992524075</td><br></tr><br><tr><br><td>One Room</td><br><td>81130</td><br><td>5.045102635</td><br></tr><br><tr><br><td>粗点心战争</td><br><td>1089607</td><br><td>5.192970417</td><br></tr><br><tr><br><td>风夏</td><br><td>627720</td><br><td>5.197259351</td><br></tr><br><tr><br><td>SEIREN</td><br><td>407219</td><br><td>5.311204776</td><br></tr><br><tr><br><td>天真与闪电</td><br><td>299089</td><br><td>5.443797509</td><br></tr><br><tr><br><td>Hand Shakers</td><br><td>236262</td><br><td>5.449409968</td><br></tr><br><tr><br><td>Taboo Tattoo－禁忌咒纹－</td><br><td>524571</td><br><td>6.009652647</td><br></tr><br></tbody><br></table><br></div><h2 id="采集计算代码"><a href="#采集计算代码" class="headerlink" title="采集计算代码"></a>采集计算代码</h2><p>使用方法：保存为py脚本，在B站得到番番剧ID后执行<code>python demo.py 番剧ID</code>，得到的数据会存放在CSV文件中。如果报错或得到的数据极小，那么该番局可能采用了分P分集方式，无法获得最终结果。</p><pre><code># -*- coding: UTF-8 -*-import requestsimport sysimport jsonimport csvimport codecsreload(sys)sys.setdefaultencoding(&apos;utf-8&apos;)r = requests.get(&apos;https://bangumi.bilibili.com/jsonp/seasoninfo/&apos;+str(sys.argv[1])+&apos;.ver?callback=seasonListCallback&amp;jsonp=jsonp&amp;_=1503473663364&apos;)j= r.text[19:-2]js=json.loads(j)av_list=[]view_list=[]def get_view(av):    r = requests.get(&apos;http://api.bilibili.com/archive_stat/stat?aid=&apos;+str(av))    r_js=json.loads(r.text)    return int(r_js[&apos;data&apos;][&apos;view&apos;])for id in js[&apos;result&apos;][&apos;episodes&apos;]:    av_list.append(id[&apos;av_id&apos;])    view_list.append(get_view(id[&apos;av_id&apos;]))#get x averagex_num=float(len(av_list))i=1x_average=0for ii in av_list:    x_average = x_average+(i/x_num)    i=i+1x_average=x_average*view_list[-1]#get y averagey_average=0for ii in view_list:    y_average = y_average+(ii/x_num)# get b abovescount=0.0i=1for ii in view_list:    count = count+ii*i*view_list[-1]    i=i+1b_above = count-(x_num*x_average*y_average)#get b_downb_down=0.0i=1for ii in av_list:    b_down=b_down+i*view_list[-1]*i*view_list[-1]    i=i+1b_down = b_down - x_num*x_average*x_average#get rankrank = b_above/b_downwith open(&apos;2.csv&apos;, &apos;ab+&apos;) as csvfile:    spamwriter = csv.writer(csvfile)    csvfile.write(codecs.BOM_UTF8)    spamwriter.writerow([js[&apos;result&apos;][&apos;bangumi_title&apos;], js[&apos;result&apos;][&apos;danmaku_count&apos;], rank*100])print js[&apos;result&apos;][&apos;bangumi_title&apos;]+&quot;   &quot;+str(rank*100)</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;计算原理&quot;&gt;&lt;a href=&quot;#计算原理&quot; class=&quot;headerlink&quot; title=&quot;计算原理&quot;&gt;&lt;/a&gt;计算原理&lt;/h2&gt;&lt;p&gt;一般情况下，番剧的单集播放量会随着集数的增加而减少，一步番剧播放量减少越剧烈，则说明该番观众中途弃坑人数较多，番剧可能剧情乏
      
    
    </summary>
    
      <category term="正常的文章" scheme="https://aoaoao.me/categories/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="bilibili" scheme="https://aoaoao.me/tags/bilibili/"/>
    
      <category term="python" scheme="https://aoaoao.me/tags/python/"/>
    
      <category term="动漫" scheme="https://aoaoao.me/tags/%E5%8A%A8%E6%BC%AB/"/>
    
  </entry>
  
  <entry>
    <title>91年前的今天，时间开始减少</title>
    <link href="https://aoaoao.me/2017/08/17/91-e5-b9-b4-e5-89-8d-e7-9a-84-e4-bb-8a-e5-a4-a9-ef-bc-8c-e6-97-b6-e9-97-b4-e5-bc-80-e5-a7-8b-e5-87-8f-e5-b0-91/"/>
    <id>https://aoaoao.me/2017/08/17/91-e5-b9-b4-e5-89-8d-e7-9a-84-e4-bb-8a-e5-a4-a9-ef-bc-8c-e6-97-b6-e9-97-b4-e5-bc-80-e5-a7-8b-e5-87-8f-e5-b0-91/</id>
    <published>2017-08-16T17:05:02.000Z</published>
    <updated>2018-04-15T11:37:48.051Z</updated>
    
    <content type="html"><![CDATA[<p>“1926年，农历虎年，此时的中国处于一片风雨飘摇之中。虽然距清王朝被推翻和民国建立已有15个年头了，但是各派军阀及一些政治派别仍在和国民党政府争夺主导权。与此同时，东面的日本正在磨刀霍霍，令人担忧。就在这一年，在上海西北方150英里以外的大运河边的古城扬州，一个男婴降生了，他是一对名叫江世俊和吴月卿的年轻夫妇的第三个孩子。”</p><p>“这一天是8月17日。”</p><p> ——-《他改变了中国》第九页。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;“1926年，农历虎年，此时的中国处于一片风雨飘摇之中。虽然距清王朝被推翻和民国建立已有15个年头了，但是各派军阀及一些政治派别仍在和国民党政府争夺主导权。与此同时，东面的日本正在磨刀霍霍，令人担忧。就在这一年，在上海西北方150英里以外的大运河边的古城扬州，一个男婴降生了
      
    
    </summary>
    
      <category term="不正常的文章" scheme="https://aoaoao.me/categories/%E4%B8%8D%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>【译】十大（其实是八大）关于业余无线电台的树莓派应用</title>
    <link href="https://aoaoao.me/2017/08/11/e3-80-90-e8-af-91-e3-80-91-e5-8d-81-e5-a4-a7-ef-bc-88-e5-85-b6-e5-ae-9e-e6-98-af-e5-85-ab-e5-a4-a7-ef-bc-89-e5-85-b3-e4-ba-8e-e4-b8-9a-e4-bd-99-e6-97-a0-e7-ba-bf-e7-94-b5-e5-8f-b0-e7-9a-84-e6-a0-91/"/>
    <id>https://aoaoao.me/2017/08/11/e3-80-90-e8-af-91-e3-80-91-e5-8d-81-e5-a4-a7-ef-bc-88-e5-85-b6-e5-ae-9e-e6-98-af-e5-85-ab-e5-a4-a7-ef-bc-89-e5-85-b3-e4-ba-8e-e4-b8-9a-e4-bd-99-e6-97-a0-e7-ba-bf-e7-94-b5-e5-8f-b0-e7-9a-84-e6-a0-91/</id>
    <published>2017-08-10T18:48:04.000Z</published>
    <updated>2018-04-16T01:13:30.965Z</updated>
    
    <content type="html"><![CDATA[<p>译自原文：<a href="http://www.hamblog.co.uk/top-10-amateur-radio-uses-for-raspberry-pi/" target="_blank" rel="noopener">http://www.hamblog.co.uk/top-10-amateur-radio-uses-for-raspberry-pi/</a>，删除了原文开头关于树莓派的基本介绍。本文有较多专业词汇，翻译不准确欢迎指出。</p><h2 id="1-解码数字信号"><a href="#1-解码数字信号" class="headerlink" title="1. 解码数字信号"></a>1. 解码数字信号</h2><p>树莓派支持使用外接USB声卡的音频输入来解码数字信号。实际上，您可以在树莓派上安装FLDigi软件，以解码各种信号数据模式，包括RTTY，PSK（相移键控）和CW（如常见的摩尔斯电码）等等。这可能是我推荐给那些迫不及待想要进入树莓派世界的新手的第一个项目，你甚至可以<a href="http://photobyte.org/product/raspberry-pi-fldigi/" target="_blank" rel="noopener">从这里</a>购买已经安装好所需软件的SD卡以便快速开始。<br>一旦你成功解码了信号，你可以将收到的信号发送到Reverse Beacon Network，这在FLDigi配置中很容易完成。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/08/cq-macro.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="2-软件定义的无线电（SDR）"><a href="#2-软件定义的无线电（SDR）" class="headerlink" title="2. 软件定义的无线电（SDR）"></a>2. 软件定义的无线电（SDR）</h2><p>你可以使用树莓派、USB声卡、RTL适配器（某宝200rmb）搭建最廉价（也许）的SDR接收器，你可以接收到频率在25MHz-1800MHz间的信号，再将其连接到盘锥天线天线上，你就得到了一个非常强大的信号扫描器。</p><p>你可以在Raspbian 上使用SDR# 软件来实现这一切。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/08/SDRsharp.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/08/sdr-radio-pi.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>更重要的是，你可以使用你的笔记本、平板电脑等设备在家中远程访问树莓派接收器。当然，你需要将树莓派连接至家庭网络，有两种方式可供选择：WiFi或物理网线。我推荐使用物理线缆以使链接更稳定。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/08/TB17X4qGFXXXXcqXVXXXXXXXXXX_0-item_pic.jpg_400x400.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>（某宝出售的SDR接收机，可连接树莓派）</p><p>当然，也有将一切都准备就绪的SD卡出售，你可以<a href="http://photobyte.org/product/raspberry-pi-with-tightvnc-and-rtl-dongle-server/" target="_blank" rel="noopener">点击这里</a>购买。</p><h2 id="3-弱信号传播报告器（WSPR）"><a href="#3-弱信号传播报告器（WSPR）" class="headerlink" title="3.弱信号传播报告器（WSPR）"></a>3.弱信号传播报告器（WSPR）</h2><p>树莓派的一个不可思议之处在于你可以使用GPIO接口输出频率在0-250MHz之间的射频信号。于是我们就拥有了一台强大的LF/MF/HF/VHF弱信号传播报告器。树莓派内部有晶体管可以做到这一点，虽然它需要在WsprryPi软件中进行校准，以确保其对WSPR的精确度。<br>树莓派提供了功率约为10mW的输出，没有较高的射频，但足以满足WSPR应用的需求。需要注意的是其输出的方波需要低通滤波器，你也需要一个稳压电源以确保其输出频率的稳定。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/08/2016-10-12_1228.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>&lt;译注&gt;简单理解就是，树莓派发出的无线电信号可能不强，而WSPR这个东西可以让你实时追踪你的信号传播到了世界的哪个位置。如下图的简单设备：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/08/3ee88-img_1521.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>使用WSPR追踪信号，竟然跨越了大西洋：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/08/828f3-wspr_dg6fl_us.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="4-业余卫星追踪"><a href="#4-业余卫星追踪" class="headerlink" title="4.业余卫星追踪"></a>4.业余卫星追踪</h2><p>这可能是你能掌握的最简单的树莓派项目。在你的树莓派上安装<a href="http://gpredict.oz9aec.net/" target="_blank" rel="noopener">GPredict</a>，你就拥有了一台强大的卫星追踪器，允许你实时追踪世界上任何能想象到的卫星（其实并不是= = ）。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/08/28902144392_8cd36d57fe_z.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>你能过滤所追踪卫星的种类，只需要选择你感兴趣的卫星，就能实时最终它的状态。你首先需要做的是把天线接到你的树莓派上。（上文提到的SDR接收机理论上也行）</p><p>&lt;译注&gt;这里要安利一波哈工大研发的小型卫星紫丁香二号，其不仅开放指令，任何人都能追踪状态，甚至用它给地球拍照并回传图形，还针推业余无线电爱好者提供了免费的无线电中继服务。项目主页：<a href="http://lilacsat.hit.edu.cn/" target="_blank" rel="noopener">http://lilacsat.hit.edu.cn/</a></p><h2 id="5-Digital-Voice-DV-热点"><a href="#5-Digital-Voice-DV-热点" class="headerlink" title="5. Digital Voice (DV) 热点"></a>5. Digital Voice (DV) 热点</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/08/wpbe22da83_05_06.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>将树莓派编程数字语音热点是另一个受欢迎的用法，有许多扩展组件能让你将树莓派变成D-STAR,Fusio,DMR网络接入点。树莓派能将互联网与射频信号无缝融合，不需要任何DV中继器。</p><p>目前有两款扩展组件可供选择：</p><ul><li><a href="http://www.hamradio.co.uk/sdr-software-defined-radio-helitron/helitron/dv4mini-2m-usb-stick-for-d-star-dmr-and-c4fm-fusion-pd-6949.php" target="_blank" rel="noopener">DVD4Mini USB Dongle</a></li><li><a href="http://www.dvmega.co.uk/RPI%20Dual%20Radio%20Adapter.html" target="_blank" rel="noopener"><span class="s2">DV-Mega Add On Board</span></a></li></ul><h2 id="6-自动位置报告系统"><a href="#6-自动位置报告系统" class="headerlink" title="6.自动位置报告系统"></a>6.自动位置报告系统</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/08/APRS-radio-pi.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>你可以将树莓派变成APRS（自动位置报告系统）Digipeater，以跟踪业余无线电爱好者的位置（包括你自己）。当你将HT连接到树莓派上后，你可以从电台中接受数据包并将其发送到APRS-IS（基于互联网的APRS网络），反之亦然。详细指南可参考<a href="https://github.com/wb2osz/direwolf/blob/master/doc/Raspberry-Pi-SDR-IGate.pdf" target="_blank" rel="noopener">RX only APRS I-Gate can be found here.</a></p><h2 id="7-ADS-B-航班追踪"><a href="#7-ADS-B-航班追踪" class="headerlink" title="7.ADS-B 航班追踪"></a>7.ADS-B 航班追踪</h2><p>使用PiAware软件你可以实时追踪飞机上的 ADS-B（广播式自动相关监视）系统播报的航班信息。这能让你实时追踪你所在区域的飞机的位置，非常酷，我离伦敦希思罗机场不远，所以追踪到不少飞机，你可以在图中看到。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/08/Snipaste_2017-08-11_10-34-57.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="8-天线转轴控制器"><a href="#8-天线转轴控制器" class="headerlink" title="8. 天线转轴控制器"></a>8. 天线转轴控制器</h2><p>这个应用我还没有尝试过，不过已经有一些使用树莓派控制天线的实验，比如<a href="https://jkry.org/ouluhack/PiRotator" target="_blank" rel="noopener">PiRotator</a> 。</p><p>&nbsp;</p><p>&nbsp;</p><p>原作者列出的剩余两个应用与业余无线电无关，分别是游戏机与家庭媒体中心，相关文章有很多，就不再翻译了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;译自原文：&lt;a href=&quot;http://www.hamblog.co.uk/top-10-amateur-radio-uses-for-raspberry-pi/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.hamblog.co.
      
    
    </summary>
    
      <category term="正常的文章" scheme="https://aoaoao.me/categories/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="无线电" scheme="https://aoaoao.me/tags/%E6%97%A0%E7%BA%BF%E7%94%B5/"/>
    
      <category term="树莓派" scheme="https://aoaoao.me/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>博客已搬迁至Linode</title>
    <link href="https://aoaoao.me/2017/07/03/e5-8d-9a-e5-ae-a2-e5-b7-b2-e6-90-ac-e8-bf-81-e8-87-b3linode/"/>
    <id>https://aoaoao.me/2017/07/03/e5-8d-9a-e5-ae-a2-e5-b7-b2-e6-90-ac-e8-bf-81-e8-87-b3linode/</id>
    <published>2017-07-03T03:44:33.000Z</published>
    <updated>2018-04-15T11:37:48.051Z</updated>
    
    <content type="html"><![CDATA[<p><del datetime="2017-07-10T06:50:22+00:00">博客已搬迁至Linode,吔屎吧阿里云</del></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;del datetime=&quot;2017-07-10T06:50:22+00:00&quot;&gt;博客已搬迁至Linode,吔屎吧阿里云&lt;/del&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="不正常的文章" scheme="https://aoaoao.me/categories/%E4%B8%8D%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>暑期新坑</title>
    <link href="https://aoaoao.me/2017/07/03/e6-9a-91-e6-9c-9f-e6-96-b0-e5-9d-91/"/>
    <id>https://aoaoao.me/2017/07/03/e6-9a-91-e6-9c-9f-e6-96-b0-e5-9d-91/</id>
    <published>2017-07-02T23:59:29.000Z</published>
    <updated>2018-04-16T01:13:31.800Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/07/QQ截图20170703155106.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/07/QQ截图20170703155317.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>并不是新版的树洞外链，因为这个程序是网盘程序，和树洞外链的主打观念不同，只不过因为树洞外链的LOGO是现成的，就拿来用了。</p><p>此项目还在开发初期阶段，提前发出来是为了让大家督促我以至于不会弃坑。</p><p>新项目名称未定，如果一直没想到更好的名字的话就用我同桌起的一个中二的名字（先不说是啥了 ヽ(￣▽￣)ﾉ）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="正常的文章" scheme="https://aoaoao.me/categories/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="云存储" scheme="https://aoaoao.me/tags/%E4%BA%91%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>用树莓派推流B站直播搭建的自助MV点歌台</title>
    <link href="https://aoaoao.me/2017/06/19/e7-94-a8-e6-a0-91-e8-8e-93-e6-b4-be-e6-8e-a8-e6-b5-81b-e7-ab-99-e7-9b-b4-e6-92-ad-e6-90-ad-e5-bb-ba-e7-9a-84-e8-87-aa-e5-8a-a9mv-e7-82-b9-e6-ad-8c-e5-8f-b0/"/>
    <id>https://aoaoao.me/2017/06/19/e7-94-a8-e6-a0-91-e8-8e-93-e6-b4-be-e6-8e-a8-e6-b5-81b-e7-ab-99-e7-9b-b4-e6-92-ad-e6-90-ad-e5-bb-ba-e7-9a-84-e8-87-aa-e5-8a-a9mv-e7-82-b9-e6-ad-8c-e5-8f-b0/</id>
    <published>2017-06-18T23:44:45.000Z</published>
    <updated>2018-04-16T01:13:32.508Z</updated>
    
    <content type="html"><![CDATA[<p>先上效果，B站直播地址：<a href="http://live.bilibili.com/3368800" target="_blank" rel="noopener">http://live.bilibili.com/3368800</a> 点歌入口：<a href="https://aoaoao.me/live/">https://aoaoao.me/live/</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/06/搜狗截图20170619153649.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/06/搜狗截图20170619153116.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>这个点歌台主要是受到<a href="https://www.chenxublog.com/2017/06/05/raspi-live-24h-bilibili-choice.html" target="_blank" rel="noopener">这篇文章</a>的启发，但原PO主的无法播放MV，视频部分为固定的图像。我七拼八凑做出来一个能点播网易云MV的点歌台，点歌台程序部分主要分为2个进程，其中一个接受用户的点歌请求并下载MV视频数据，第二个使用ffmpeg推流，轮询数据库，如果没有点歌请求，就播放默认的视频画面。具体步骤在这里就不详细说了，那篇文章介绍的很清楚。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/06/搜狗截图20170619154658.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先上效果，B站直播地址：&lt;a href=&quot;http://live.bilibili.com/3368800&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://live.bilibili.com/3368800&lt;/a&gt; 点歌入口：&lt;a href=&quot;
      
    
    </summary>
    
      <category term="正常的文章" scheme="https://aoaoao.me/categories/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="python" scheme="https://aoaoao.me/tags/python/"/>
    
      <category term="树莓派" scheme="https://aoaoao.me/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>树莓派远程叫起床器</title>
    <link href="https://aoaoao.me/2017/06/17/e6-a0-91-e8-8e-93-e6-b4-be-e8-bf-9c-e7-a8-8b-e5-8f-ab-ef-bc-88-e8-b5-b7-ef-bc-89-e5-ba-8a-e5-99-a8/"/>
    <id>https://aoaoao.me/2017/06/17/e6-a0-91-e8-8e-93-e6-b4-be-e8-bf-9c-e7-a8-8b-e5-8f-ab-ef-bc-88-e8-b5-b7-ef-bc-89-e5-ba-8a-e5-99-a8/</id>
    <published>2017-06-17T01:01:21.000Z</published>
    <updated>2018-04-16T01:13:32.438Z</updated>
    
    <content type="html"><![CDATA[<p>此<del datetime="2017-06-17T00:01:39+00:00">叫床器</del>大概功能就是实现在网页端远程给我发送摩斯电码或者语音，我家的树莓派收到后会大声播放出来。体验地址：<a href="https://aoaoao.me/rasp">https://aoaoao.me/rasp</a></p><p>网页部分截图如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/06/NZL7E4H03YFHQVD3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>实际执行效果我拍成视频传到秒拍了：<a href="http://www.miaopai.com/show/aEiPEgybaIkkK6-6~4Uf3zaaPmzKtCnv.htm" target="_blank" rel="noopener">http://www.miaopai.com/show/aEiPEgybaIkkK6-6~4Uf3zaaPmzKtCnv.htm</a></p><h2 id="硬件部分"><a href="#硬件部分" class="headerlink" title="硬件部分"></a>硬件部分</h2><p>硬件部分非常简单，只是一个树莓派接了一个扬声器：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/06/QQ截图20170617082001.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="软件部分"><a href="#软件部分" class="headerlink" title="软件部分"></a>软件部分</h2><h3 id="语音播报"><a href="#语音播报" class="headerlink" title="语音播报"></a>语音播报</h3><p>语音播报使用的是百度翻译的TTS api，效果还不错，接口URL为：<code>http://tts.baidu.com/text2audio?lan=zh&amp;amp;ie=UTF-8&amp;amp;spd=3&amp;amp;text=</code> 树莓派获取到用户输入的文字后，使用此API转换为音频，保存后播放出。这里我使用pygame库来播放MP3，可能是因为采样率还是什么的没设置好，所以播放出来的音频是加快的，也就是视频中那个滑稽的声音。<br>此部分代码：</p><pre><code># -*- coding: UTF-8 -*-import sysimport pygameimport timeimport requestss = time.time()r = requests.get(&quot;http://tts.baidu.com/text2audio?lan=zh&amp;amp;ie=UTF-8&amp;amp;spd=3&amp;amp;text=&quot;+str(sys.$with open(str(s)+&quot;.mp3&quot;, &quot;wb&quot;) as code:    code.write(r.content)pygame.mixer.init()pygame.mixer.music.load(str(s)+&quot;.mp3&quot;)pygame.mixer.music.play()while pygame.mixer.music.get_busy():        i=1`&lt;/pre&gt;### 摩斯电码播报原本打算使用Python直接发出特定频率的声音，在Windows下试验成功但在Linux下在发现winsound这个发声库只能在win下工作。所以我采用了一种笨拙的方式：生成一段600Hz的音频，使用pygame播放这段音频，通过调整音量来实现“滴答”的效果。似乎是因为Python本身的执行速率问题，如果将发生间隔设置太短，人的主观感受就是一直在响，所以最终的播报还是比较缓慢的，不太像正宗的发报机的声音。代码如下：&lt;pre class=&quot;language-python&quot;&gt;`import pygameimport timeimport syspygame.mixer.init()pygame.mixer.music.load(&quot;/home/dot.mp3&quot;)time.sleep(2)pygame.mixer.music.play()pygame.mixer.music.set_volume(0)t=str(sys.argv[1])for letter in t:        if letter == &quot;.&quot;:                pygame.mixer.music.set_volume(1)                time.sleep(0.2)                pygame.mixer.music.set_volume(0)                time.sleep(0.3)        elif letter == &quot;-&quot;:                pygame.mixer.music.set_volume(1)                time.sleep(0.4)                pygame.mixer.music.set_volume(0)                time.sleep(0.2)        else:                time.sleep(1)</code></pre><h2 id="收到的内容"><a href="#收到的内容" class="headerlink" title="收到的内容"></a>收到的内容</h2><p><del>如果我闲的话，会把收到的内容在这更新(～￣▽￣)～</del></p><ul><li>苟利国家生死以</li><li>所以，这是啥</li><li>好好学习</li><li>哈哈哈哈哈哈</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此&lt;del datetime=&quot;2017-06-17T00:01:39+00:00&quot;&gt;叫床器&lt;/del&gt;大概功能就是实现在网页端远程给我发送摩斯电码或者语音，我家的树莓派收到后会大声播放出来。体验地址：&lt;a href=&quot;https://aoaoao.me/rasp&quot;&gt;htt
      
    
    </summary>
    
      <category term="正常的文章" scheme="https://aoaoao.me/categories/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="python" scheme="https://aoaoao.me/tags/python/"/>
    
      <category term="树莓派" scheme="https://aoaoao.me/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>我还活着</title>
    <link href="https://aoaoao.me/2017/06/08/e6-88-91-e8-bf-98-e6-b4-bb-e7-9d-80/"/>
    <id>https://aoaoao.me/2017/06/08/e6-88-91-e8-bf-98-e6-b4-bb-e7-9d-80/</id>
    <published>2017-06-08T12:21:23.000Z</published>
    <updated>2018-04-15T11:37:48.051Z</updated>
    
    <content type="html"><![CDATA[<p>RT</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;RT&lt;/p&gt;

      
    
    </summary>
    
      <category term="不正常的文章" scheme="https://aoaoao.me/categories/%E4%B8%8D%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>【伪·黑科技】基于像素微调实现的文字隐写术</title>
    <link href="https://aoaoao.me/2017/01/27/e3-80-90-e4-bc-aa-c2-b7-e9-bb-91-e7-a7-91-e6-8a-80-e3-80-91-e5-9f-ba-e4-ba-8e-e5-83-8f-e7-b4-a0-e5-be-ae-e8-b0-83-e5-ae-9e-e7-8e-b0-e7-9a-84-e6-96-87-e5-ad-97-e9-9a-90-e5-86-99-e6-9c-af/"/>
    <id>https://aoaoao.me/2017/01/27/e3-80-90-e4-bc-aa-c2-b7-e9-bb-91-e7-a7-91-e6-8a-80-e3-80-91-e5-9f-ba-e4-ba-8e-e5-83-8f-e7-b4-a0-e5-be-ae-e8-b0-83-e5-ae-9e-e7-8e-b0-e7-9a-84-e6-96-87-e5-ad-97-e9-9a-90-e5-86-99-e6-9c-af/</id>
    <published>2017-01-27T05:42:23.000Z</published>
    <updated>2018-04-15T11:37:48.051Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>先看下面这张图像：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://shudongwl.b0.upaiyun.com/870308089_result.png" alt="870308089_result.png" title="">                </div>                <div class="image-caption">870308089_result.png</div>            </figure><p>这张看似“纯黑色”的图像中其实隐藏了一份完整版的 GPL V3 协议的中文译文，而且文字信息就隐藏在像素之间。想要获得这幅图像的密文信息，我们只需要打开( <a href="https://hide.aoaoao.me/" target="_blank" rel="noopener">https://hide.aoaoao.me</a>),选择这张图像，即可解密出完整内容：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://shudongwl.b0.upaiyun.com/70127131046717.jpg" alt="70127131046717.jpg" title="">                </div>                <div class="image-caption">70127131046717.jpg</div>            </figure><p>如果想要生成这种带有密文的图像，只需要选择已有的图像，填写密文，即可生成。这样的隐写术不是直接讲内容写入文件数据，而是通过微调像素的色值来达到存放数据的目的，由于只是微调，因此正常人很难察觉其中的变化。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ol><li>将待处理文本转换为二进制格式，并补足 16 位连接起来</li><li>遍历图像的每个像素的每个色彩通道值，与之前的二进制数据相对应，如果为 1 ，则微调当前色彩值至最近的偶数，反之为奇数</li><li>在图像开始和文本写入结束时分别加入特殊标记以便后期读取识别<br>理论上一张图像可以存放的字数（中英文都算为1个字）=(图像长像素数X图像宽像素数-34)/16。比如：一张500像素X500像素的图像可以存放约15万字。</li></ol><p>我用一些图像测试了一下，大家可以对比对比：</p><p>原图：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://shudongwl.b0.upaiyun.com/qww.jpg" alt="qww.jpg" title="">                </div>                <div class="image-caption">qww.jpg</div>            </figure><p>下图为写入《独立宣言》中文译文后的图像：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://shudongwl.b0.upaiyun.com/963573080_result.png" alt="963573080_result.png" title="">                </div>                <div class="image-caption">963573080_result.png</div>            </figure><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><p>GitHub:<a href="https://github.com/HFO4/HideByPixel" target="_blank" rel="noopener">https://github.com/HFO4/HideByPixel</a></p><p>Demo:<a href="https://hide.aoaoao.me/" target="_blank" rel="noopener">https://hide.aoaoao.me/</a></p><p>（代码匆忙写成，有许多 Bug ，时不时会抽风，请多多包涵）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;先看下面这张图像：&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class
      
    
    </summary>
    
      <category term="正常的文章" scheme="https://aoaoao.me/categories/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="python" scheme="https://aoaoao.me/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>一个神奇的乱码图像生成算法</title>
    <link href="https://aoaoao.me/2017/01/25/e4-b8-80-e4-b8-aa-e7-a5-9e-e5-a5-87-e7-9a-84-e4-b9-b1-e7-a0-81-e5-9b-be-e5-83-8f-e7-94-9f-e6-88-90-e7-ae-97-e6-b3-95/"/>
    <id>https://aoaoao.me/2017/01/25/e4-b8-80-e4-b8-aa-e7-a5-9e-e5-a5-87-e7-9a-84-e4-b9-b1-e7-a0-81-e5-9b-be-e5-83-8f-e7-94-9f-e6-88-90-e7-ae-97-e6-b3-95/</id>
    <published>2017-01-25T09:45:56.000Z</published>
    <updated>2018-04-16T01:13:31.100Z</updated>
    
    <content type="html"><![CDATA[<p>今天本想研究下图像隐写书的相关算法，结果偶然间发现一个很有意思的现象，如下为jpg格式的原图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/01/p.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我使用Python对其每个像素的三个通道进行遍历，如果色值为偶数，就将其改设为255，如果为奇数则设为零。Python脚本如下：</p><pre><code>from PIL import Imageimport osfrom numpy import *def jiou(num):    if (num % 2) == 0:        return True    else:        return Falseim = array(Image.open(&apos;20170125135222.jpg&apos;))for i in range(0,683):    for y in range(0,974):        for x in range(0,3):            if(im[y,i,x] == 0):                im[y,i,x] = im[y,i,x] +255            elif(im[y,i,x] == 255):                im[y,i,x] = im[y,i,x] -255            else:                if (jiou(im[y,i,x])):                    im[y,i,x]=255                else:                    im[y,i,x]=0t = Image.fromarray(im)t.show()</code></pre><p>一个很简单的算法，我本以为会得到一张密密麻麻混乱的图像，结果呢？<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/01/搜狗截图20170125161916.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>→_→不还是很混乱吗！</p><p>但是仔细观察就会发现一些奇怪的现象</p><ol><li>观察图像全貌，是可以看到主体人物的大致轮廓的，并不想预期的那样一团乱</li><li>放大后发现有许多像素在一起构成了奇怪的纹理<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/01/搜狗截图20170125162442.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li><li>这些纹理以块状集中出现，而且每块由两种颜色构成</li><li>有某些集中区域只有黑白两种颜色，这些区域在原图中都是近黑色<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.aoaoao.me/wp-content/uploads/2017/01/搜狗截图20170125162642.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>我猜想的原因可能是jpg的压缩算法导致的，具体原因没有深究，有哪位大佬知道欢迎留言喵</li></ol><h2 id="关于那个隐写术"><a href="#关于那个隐写术" class="headerlink" title="关于那个隐写术"></a>关于那个隐写术</h2><p>正如前文，我是在研究隐写术时发现这个现象的。我本想通过下面的方法把信息写到图像里：</p><p>先讲要隐藏的信息转为二进制格式，然后遍历已有的图像的像素，如果二进制数字为1，就把像素颜色值就进微调为奇数，反之为偶数，以此达到储存信息的目的。我粗略计算了一下，一张700X900像素的图像大概可以存放120 000个字符，而图像的大小几乎不变！<del>然而。。实际尝试时发现这样处理只能使用bmp格式图像，而一张90kb的图像换成bmp的，大小要增加到1.5mb，显然有点得不偿失了</del>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天本想研究下图像隐写书的相关算法，结果偶然间发现一个很有意思的现象，如下为jpg格式的原图&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
             
      
    
    </summary>
    
      <category term="正常的文章" scheme="https://aoaoao.me/categories/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="python" scheme="https://aoaoao.me/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>本站Telegram群</title>
    <link href="https://aoaoao.me/2017/01/15/e6-9c-ac-e7-ab-99telegram-e7-be-a4/"/>
    <id>https://aoaoao.me/2017/01/15/e6-9c-ac-e7-ab-99telegram-e7-be-a4/</id>
    <published>2017-01-14T23:32:02.000Z</published>
    <updated>2018-04-15T11:37:48.051Z</updated>
    
    <content type="html"><![CDATA[<p>本站Telegram群：<a href="https://aoaoao.me/api/join.php">https://aoaoao.me/api/join.php</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本站Telegram群：&lt;a href=&quot;https://aoaoao.me/api/join.php&quot;&gt;https://aoaoao.me/api/join.php&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="正常的文章" scheme="https://aoaoao.me/categories/%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    
    
  </entry>
  
</feed>
